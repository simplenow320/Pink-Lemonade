modules = ["python-3.11", "postgresql-16", "nodejs-20"]

[nix]
channel = "stable-24_05"
packages = ["freetype", "geckodriver", "glibcLocales", "imagemagick", "jq", "lcms2", "libimagequant", "libjpeg", "libtiff", "libwebp", "libxcrypt", "openjpeg", "openssl", "poetry", "postgresql", "python311Packages.flask", "python311Packages.flask-cors", "python311Packages.flask-login", "python311Packages.flask-sqlalchemy", "python311Packages.pytest", "python311Packages.pytest-flask", "python311Packages.qrcode", "python311Packages.redis", "python311Packages.requests", "python311Packages.sendgrid", "tcl", "tk", "zlib"]

[deployment]
deploymentTarget = "autoscale"
run = ["gunicorn", "--bind", "0.0.0.0:5000", "main:app"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app"
waitForPort = 5000

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 36115
externalPort = 3002

[[ports]]
localPort = 41005
externalPort = 3000

[[ports]]
localPort = 45101
externalPort = 3001

[agent]
