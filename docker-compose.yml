version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: grantflow-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-grantflow}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - grantflow-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: grantflow-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-grantflow}
      - PGUSER=${POSTGRES_USER:-postgres}
      - PGPASSWORD=${POSTGRES_PASSWORD:-postgres}
      - PGDATABASE=${POSTGRES_DB:-grantflow}
      - PGHOST=postgres
      - PGPORT=5432
      - SESSION_SECRET=${SESSION_SECRET:-developmentsecret}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FLASK_ENV=${FLASK_ENV:-production}
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    restart: unless-stopped
    networks:
      - grantflow-network
      
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: grantflow-frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - grantflow-network

networks:
  grantflow-network:
    driver: bridge

volumes:
  postgres_data: