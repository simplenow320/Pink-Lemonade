{"version":3,"file":"static/js/373.7e4b5a87.chunk.js","mappings":"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","sources":["components/ui/ProgressIndicator.jsx","components/ui/ProfileRewards.jsx","components/ui/ErrorVisualization.jsx","../../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js","../../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","../../node_modules/@heroicons/react/24/outline/esm/UserIcon.js","../../node_modules/@heroicons/react/24/outline/esm/EnvelopeIcon.js","../../node_modules/@heroicons/react/24/outline/esm/PhoneIcon.js","../../node_modules/@heroicons/react/24/outline/esm/BriefcaseIcon.js","../../node_modules/@heroicons/react/24/outline/esm/BuildingOfficeIcon.js","pages/Profile.js"],"sourcesContent":["import React from 'react';\n\nconst ProgressIndicator = ({ currentStep = 1, totalSteps = 5, stepLabels = [] }) => {\n  const defaultLabels = [\n    'Basic Info',\n    'Programs',\n    'Capacity', \n    'Grant History',\n    'AI Learning'\n  ];\n\n  const labels = stepLabels.length ? stepLabels : defaultLabels;\n\n  return (\n    <div className=\"w-full max-w-4xl mx-auto py-6\">\n      {/* Main Progress Bar */}\n      <div className=\"relative mb-8\">\n        <div className=\"absolute top-4 left-0 w-full h-0.5 bg-gray-200\"></div>\n        <div \n          className=\"absolute top-4 left-0 h-0.5 bg-gradient-to-r from-pink-400 to-pink-600 transition-all duration-500 ease-out\"\n          style={{ width: `${((currentStep - 1) / (totalSteps - 1)) * 100}%` }}\n        ></div>\n        \n        {/* Step Circles */}\n        <div className=\"relative flex justify-between\">\n          {Array.from({ length: totalSteps }, (_, index) => {\n            const stepNumber = index + 1;\n            const isCompleted = stepNumber < currentStep;\n            const isCurrent = stepNumber === currentStep;\n            \n            return (\n              <div key={stepNumber} className=\"flex flex-col items-center\">\n                <div\n                  className={`\n                    w-8 h-8 rounded-full border-2 flex items-center justify-center text-sm font-medium transition-all duration-300\n                    ${isCompleted \n                      ? 'bg-pink-500 border-pink-500 text-white animate-pulse' \n                      : isCurrent\n                      ? 'bg-white border-pink-500 text-pink-500 shadow-lg scale-110' \n                      : 'bg-gray-50 border-gray-300 text-gray-400'\n                    }\n                  `}\n                >\n                  {isCompleted ? (\n                    <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  ) : (\n                    stepNumber\n                  )}\n                </div>\n                \n                {/* Step Label */}\n                <div className=\"mt-2 text-center\">\n                  <div \n                    className={`\n                      text-xs font-medium transition-colors duration-300\n                      ${isCurrent ? 'text-pink-600' : isCompleted ? 'text-gray-700' : 'text-gray-400'}\n                    `}\n                  >\n                    {labels[index]}\n                  </div>\n                  {isCurrent && (\n                    <div className=\"text-xs text-gray-500 mt-1\">Current Step</div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      \n      {/* Progress Text */}\n      <div className=\"text-center\">\n        <div className=\"text-sm text-gray-600\">\n          Step {currentStep} of {totalSteps}\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\n          <div \n            className=\"bg-gradient-to-r from-pink-400 to-pink-600 h-2 rounded-full transition-all duration-500 ease-out\"\n            style={{ width: `${(currentStep / totalSteps) * 100}%` }}\n          ></div>\n        </div>\n        <div className=\"text-xs text-gray-500 mt-1\">\n          {Math.round((currentStep / totalSteps) * 100)}% Complete\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressIndicator;","import React, { useState, useEffect } from 'react';\n\nconst ProfileRewards = ({ completionPercentage = 0, completedSections = [], totalSections = 5 }) => {\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [previousCompletion, setPreviousCompletion] = useState(completionPercentage);\n\n  // Badge definitions\n  const badges = [\n    {\n      id: 'started',\n      name: 'Getting Started',\n      description: 'You began your profile setup',\n      icon: '🚀',\n      threshold: 10,\n      color: 'pink'\n    },\n    {\n      id: 'half-way',\n      name: 'Making Progress',\n      description: 'You are halfway done with your profile',\n      icon: '⭐',\n      threshold: 50,\n      color: 'pink'\n    },\n    {\n      id: 'almost-there',\n      name: 'Almost Ready',\n      description: 'Your profile is nearly complete',\n      icon: '🎯',\n      threshold: 80,\n      color: 'pink'\n    },\n    {\n      id: 'complete',\n      name: 'Profile Master',\n      description: 'Your profile is 100% complete!',\n      icon: '🏆',\n      threshold: 100,\n      color: 'pink'\n    }\n  ];\n\n  useEffect(() => {\n    // Show celebration when completion increases\n    if (completionPercentage > previousCompletion) {\n      setShowCelebration(true);\n      setTimeout(() => setShowCelebration(false), 2000);\n    }\n    setPreviousCompletion(completionPercentage);\n  }, [completionPercentage, previousCompletion]);\n\n  const earnedBadges = badges.filter(badge => completionPercentage >= badge.threshold);\n  const nextBadge = badges.find(badge => completionPercentage < badge.threshold);\n\n  const getProgressColor = () => {\n    if (completionPercentage >= 100) return 'from-pink-400 to-pink-600';\n    if (completionPercentage >= 80) return 'from-pink-300 to-pink-500';\n    if (completionPercentage >= 50) return 'from-pink-200 to-pink-400';\n    return 'from-gray-200 to-gray-300';\n  };\n\n  return (\n    <div className=\"bg-white rounded-xl p-6 shadow-sm border border-pink-100\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Profile Progress</h3>\n        <div className=\"text-sm text-gray-500\">\n          {completedSections.length} of {totalSections} sections\n        </div>\n      </div>\n\n      {/* Progress Circle */}\n      <div className=\"flex items-center justify-center mb-6\">\n        <div className=\"relative\">\n          <svg className=\"w-24 h-24 transform -rotate-90\" viewBox=\"0 0 100 100\">\n            {/* Background circle */}\n            <circle\n              cx=\"50\"\n              cy=\"50\"\n              r=\"45\"\n              stroke=\"currentColor\"\n              strokeWidth=\"8\"\n              fill=\"transparent\"\n              className=\"text-gray-200\"\n            />\n            {/* Progress circle */}\n            <circle\n              cx=\"50\"\n              cy=\"50\"\n              r=\"45\"\n              stroke=\"url(#gradient)\"\n              strokeWidth=\"8\"\n              fill=\"transparent\"\n              strokeDasharray={`${2 * Math.PI * 45}`}\n              strokeDashoffset={`${2 * Math.PI * 45 * (1 - completionPercentage / 100)}`}\n              className=\"transition-all duration-1000 ease-out\"\n              strokeLinecap=\"round\"\n            />\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#f472b6\" />\n                <stop offset=\"100%\" stopColor=\"#ec4899\" />\n              </linearGradient>\n            </defs>\n          </svg>\n          \n          {/* Percentage text */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <div className={`text-2xl font-bold ${showCelebration ? 'animate-bounce' : ''} text-gray-900`}>\n                {completionPercentage}%\n              </div>\n              <div className=\"text-xs text-gray-500\">Complete</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Celebration Message */}\n      {showCelebration && (\n        <div className=\"mb-4 p-3 bg-pink-50 border border-pink-200 rounded-lg animate-fadeDown\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-pink-600 animate-bounce\">🎉</span>\n            <span className=\"text-sm font-medium text-pink-800\">Great job! Keep going!</span>\n          </div>\n        </div>\n      )}\n\n      {/* Earned Badges */}\n      {earnedBadges.length > 0 && (\n        <div className=\"mb-4\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Earned Badges</h4>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {earnedBadges.map((badge, index) => (\n              <div\n                key={badge.id}\n                className={`\n                  p-3 rounded-lg border-2 border-pink-200 bg-pink-50 transition-all duration-300\n                  ${showCelebration && index === earnedBadges.length - 1 ? 'animate-pulse' : ''}\n                `}\n              >\n                <div className=\"text-center\">\n                  <div className=\"text-2xl mb-1\">{badge.icon}</div>\n                  <div className=\"text-xs font-medium text-pink-800\">{badge.name}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Next Badge */}\n      {nextBadge && completionPercentage < 100 && (\n        <div className=\"mb-4\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Next Reward</h4>\n          <div className=\"p-3 rounded-lg bg-gray-50 border border-gray-200\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-2xl opacity-50\">{nextBadge.icon}</div>\n              <div className=\"flex-1\">\n                <div className=\"text-sm font-medium text-gray-900\">{nextBadge.name}</div>\n                <div className=\"text-xs text-gray-500\">{nextBadge.description}</div>\n                <div className=\"text-xs text-pink-600 mt-1\">\n                  {nextBadge.threshold - completionPercentage}% to go\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Quick Actions */}\n      <div className=\"space-y-2\">\n        {completionPercentage < 100 && (\n          <button className=\"w-full px-4 py-2 bg-pink-500 text-white rounded-lg font-medium hover:bg-pink-600 transition-colors duration-200 text-sm\">\n            Continue Profile Setup\n          </button>\n        )}\n        \n        {completionPercentage >= 50 && (\n          <button className=\"w-full px-4 py-2 bg-gray-100 text-gray-700 rounded-lg font-medium hover:bg-gray-200 transition-colors duration-200 text-sm\">\n            Find Grant Matches\n          </button>\n        )}\n      </div>\n\n      {/* Tips */}\n      <div className=\"mt-4 p-3 bg-gray-50 rounded-lg\">\n        <div className=\"text-xs text-gray-600\">\n          <span className=\"font-medium\">💡 Tip:</span> \n          {completionPercentage < 50 \n            ? ' Complete more sections to unlock better grant matches.'\n            : completionPercentage < 100\n            ? ' Finish your profile for the most accurate recommendations.'\n            : ' Your complete profile helps us find the best grants for you!'\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileRewards;","import React, { useState } from 'react';\n\nconst ErrorVisualization = ({ \n  error, \n  type = 'validation', \n  field = '', \n  solution = '',\n  onRetry = null \n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  // Error type configurations\n  const errorTypes = {\n    validation: {\n      icon: '⚠️',\n      color: 'yellow',\n      title: 'Input Needs Fixing'\n    },\n    network: {\n      icon: '📡',\n      color: 'blue',\n      title: 'Connection Problem'\n    },\n    permission: {\n      icon: '🔒',\n      color: 'red',\n      title: 'Access Denied'\n    },\n    server: {\n      icon: '🔧',\n      color: 'orange',\n      title: 'System Issue'\n    },\n    format: {\n      icon: '📝',\n      color: 'purple',\n      title: 'Format Problem'\n    }\n  };\n\n  const config = errorTypes[type] || errorTypes.validation;\n\n  // Generate simple explanation based on error type\n  const getSimpleExplanation = () => {\n    switch (type) {\n      case 'validation':\n        return `The ${field || 'information'} you entered doesn't match what we need.`;\n      case 'network':\n        return 'We cannot connect to our servers right now.';\n      case 'permission':\n        return 'You do not have permission to do this action.';\n      case 'server':\n        return 'Our system is having trouble. This is not your fault.';\n      case 'format':\n        return `The ${field || 'format'} is not correct.`;\n      default:\n        return 'Something went wrong.';\n    }\n  };\n\n  // Get visual diagram based on error type\n  const getVisualDiagram = () => {\n    switch (type) {\n      case 'validation':\n        return (\n          <div className=\"flex items-center space-x-2 p-3 bg-yellow-50 rounded-lg border border-yellow-200\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center\">\n                <svg className=\"w-4 h-4 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.96-.833-2.732 0L3.732 19c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"text-sm font-medium text-yellow-800\">Check Your Input</div>\n              <div className=\"text-xs text-yellow-700 mt-1\">\n                {field && `Look at the \"${field}\" field again`}\n              </div>\n            </div>\n          </div>\n        );\n      \n      case 'network':\n        return (\n          <div className=\"flex items-center space-x-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-blue-600\">💻</span>\n              </div>\n              <div className=\"text-blue-600\">→</div>\n              <div className=\"w-8 h-8 bg-red-100 rounded-full flex items-center justify-center animate-pulse\">\n                <span className=\"text-red-600\">❌</span>\n              </div>\n              <div className=\"text-blue-600\">→</div>\n              <div className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-gray-600\">🏢</span>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'format':\n        return (\n          <div className=\"p-3 bg-purple-50 rounded-lg border border-purple-200\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-xs text-purple-700 font-medium mb-2\">What You Entered</div>\n                <div className=\"p-2 bg-red-100 rounded border border-red-200 text-red-700 text-sm\">\n                  ❌ Wrong format\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-xs text-purple-700 font-medium mb-2\">What We Need</div>\n                <div className=\"p-2 bg-green-100 rounded border border-green-200 text-green-700 text-sm\">\n                  ✅ Right format\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return (\n          <div className=\"p-3 bg-gray-50 rounded-lg border border-gray-200\">\n            <div className=\"text-center text-gray-600\">\n              <div className=\"text-2xl mb-2\">{config.icon}</div>\n              <div className=\"text-sm\">{config.title}</div>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"bg-white border-l-4 border-pink-400 rounded-lg shadow-sm p-4 animate-fadeDown\">\n      {/* Header */}\n      <div className=\"flex items-start space-x-3\">\n        <div className=\"flex-shrink-0\">\n          <div className=\"w-10 h-10 bg-pink-100 rounded-full flex items-center justify-center\">\n            <span className=\"text-lg\">{config.icon}</span>\n          </div>\n        </div>\n        \n        <div className=\"flex-1 min-w-0\">\n          <h3 className=\"text-lg font-medium text-gray-900\">{config.title}</h3>\n          <p className=\"text-sm text-gray-600 mt-1\">{getSimpleExplanation()}</p>\n          \n          {/* Original error message (if expanded) */}\n          {isExpanded && error && (\n            <div className=\"mt-3 p-3 bg-gray-50 rounded-lg\">\n              <div className=\"text-xs text-gray-500 font-medium mb-1\">Technical Details:</div>\n              <div className=\"text-xs text-gray-700 font-mono\">{error}</div>\n            </div>\n          )}\n        </div>\n\n        {/* Expand button */}\n        <button\n          onClick={() => setIsExpanded(!isExpanded)}\n          className=\"flex-shrink-0 text-gray-400 hover:text-gray-600 transition-colors duration-200\"\n        >\n          <svg \n            className={`w-5 h-5 transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Visual Diagram */}\n      <div className=\"mt-4\">\n        {getVisualDiagram()}\n      </div>\n\n      {/* Solution */}\n      {solution && (\n        <div className=\"mt-4 p-3 bg-green-50 rounded-lg border border-green-200\">\n          <div className=\"flex items-start space-x-2\">\n            <svg className=\"w-5 h-5 text-green-600 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <div>\n              <div className=\"text-sm font-medium text-green-800\">How to Fix This</div>\n              <div className=\"text-sm text-green-700 mt-1\">{solution}</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"mt-4 flex flex-wrap gap-2\">\n        {onRetry && (\n          <button\n            onClick={onRetry}\n            className=\"px-4 py-2 bg-pink-500 text-white rounded-lg font-medium hover:bg-pink-600 transition-colors duration-200 text-sm\"\n          >\n            Try Again\n          </button>\n        )}\n        \n        {type === 'validation' && (\n          <button\n            onClick={() => setIsExpanded(!isExpanded)}\n            className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg font-medium hover:bg-gray-200 transition-colors duration-200 text-sm\"\n          >\n            Need Help?\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Helper component for common error scenarios\nexport const FormValidationError = ({ field, value, expected, onFix }) => (\n  <ErrorVisualization\n    type=\"validation\"\n    field={field}\n    error={`Invalid ${field}: ${value}`}\n    solution={`Enter ${expected}. Look for the format example above the field.`}\n    onRetry={onFix}\n  />\n);\n\nexport const NetworkError = ({ onRetry }) => (\n  <ErrorVisualization\n    type=\"network\"\n    error=\"Network connection failed\"\n    solution=\"Check your internet connection and try again. If this keeps happening, wait a few minutes.\"\n    onRetry={onRetry}\n  />\n);\n\nexport const ServerError = ({ onRetry }) => (\n  <ErrorVisualization\n    type=\"server\"\n    error=\"Internal server error\"\n    solution=\"Our team has been notified. Please try again in a few minutes.\"\n    onRetry={onRetry}\n  />\n);\n\nexport default ErrorVisualization;","import * as React from \"react\";\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction UserIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(UserIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction EnvelopeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21.75 6.75v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07 1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0L3.32 8.91a2.25 2.25 0 0 1-1.07-1.916V6.75\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EnvelopeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PhoneIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PhoneIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction BriefcaseIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BriefcaseIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction BuildingOfficeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M3.75 21h16.5M4.5 3h15M5.25 3v18m13.5-18v18M9 6.75h1.5m-1.5 3h1.5m-1.5 3h1.5m3-6H15m-1.5 3H15m-1.5 3H15M9 21v-3.375c0-.621.504-1.125 1.125-1.125h3.75c.621 0 1.125.504 1.125 1.125V21\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BuildingOfficeIcon);\nexport default ForwardRef;","import React, { useState, useEffect } from 'react';\nimport { UserIcon, EnvelopeIcon, PhoneIcon, BriefcaseIcon, BuildingOfficeIcon, CheckCircleIcon, XCircleIcon } from '@heroicons/react/24/outline';\nimport ProgressIndicator from '../components/ui/ProgressIndicator';\nimport ProfileRewards from '../components/ui/ProfileRewards';\nimport ErrorVisualization from '../components/ui/ErrorVisualization';\n\nconst Profile = () => {\n  const [profileData, setProfileData] = useState({\n    first_name: '',\n    last_name: '',\n    email: '',\n    phone: '',\n    job_title: '',\n    org_name: '',\n    timezone: 'America/New_York',\n    notification_preferences: {\n      email_notifications: true,\n      grant_alerts: true,\n      weekly_digest: true,\n      deadline_reminders: true\n    }\n  });\n  \n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [errors, setErrors] = useState({});\n  const [profileCompletion, setProfileCompletion] = useState(0);\n\n  // Fetch user profile on mount\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n\n  // Calculate profile completion whenever profileData changes\n  useEffect(() => {\n    calculateCompletion();\n  }, [profileData]);\n\n  const fetchProfile = async () => {\n    try {\n      const response = await fetch('/api/profile/get', {\n        credentials: 'include'\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        if (data.profile) {\n          setProfileData(prevData => ({\n            ...prevData,\n            ...data.profile,\n            notification_preferences: {\n              ...prevData.notification_preferences,\n              ...data.profile.notification_preferences\n            }\n          }));\n        }\n      } else if (response.status === 401) {\n        window.location.href = '/';\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n      setMessage({ type: 'error', text: 'Failed to load profile' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateCompletion = () => {\n    const fields = ['first_name', 'last_name', 'email', 'phone', 'job_title', 'org_name'];\n    const filledFields = fields.filter(field => profileData[field] && profileData[field].trim() !== '');\n    const completion = Math.round((filledFields.length / fields.length) * 100);\n    setProfileCompletion(completion);\n  };\n\n  const handleInputChange = (field, value) => {\n    setProfileData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    // Clear error for this field\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: null }));\n    }\n  };\n\n  const handleNotificationChange = (pref, value) => {\n    setProfileData(prev => ({\n      ...prev,\n      notification_preferences: {\n        ...prev.notification_preferences,\n        [pref]: value\n      }\n    }));\n  };\n\n  const validateProfile = () => {\n    const newErrors = {};\n    \n    if (!profileData.first_name?.trim()) {\n      newErrors.first_name = 'First name is required';\n    }\n    \n    if (!profileData.last_name?.trim()) {\n      newErrors.last_name = 'Last name is required';\n    }\n    \n    if (!profileData.email?.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(profileData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n    \n    if (profileData.phone && !/^[\\d\\s\\-\\(\\)\\+]+$/.test(profileData.phone)) {\n      newErrors.phone = 'Please enter a valid phone number';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSave = async () => {\n    if (!validateProfile()) {\n      setMessage({ type: 'error', text: 'Please fix the errors below' });\n      return;\n    }\n\n    setSaving(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      const response = await fetch('/api/profile/update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(profileData)\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setMessage({ type: 'success', text: 'Profile updated successfully!' });\n        // Update profile data with response\n        if (data.profile) {\n          setProfileData(prev => ({\n            ...prev,\n            ...data.profile\n          }));\n        }\n      } else {\n        setMessage({ type: 'error', text: data.error || 'Failed to update profile' });\n      }\n    } catch (error) {\n      console.error('Error saving profile:', error);\n      setMessage({ type: 'error', text: 'Failed to save profile. Please try again.' });\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-pink-500\"></div>\n      </div>\n    );\n  }\n\n  const completedSections = [];\n  if (profileData.first_name && profileData.last_name) completedSections.push('personal_info');\n  if (profileData.email && profileData.phone) completedSections.push('contact_info');\n  if (profileData.job_title && profileData.org_name) completedSections.push('work_info');\n  if (profileCompletion >= 100) completedSections.push('profile_complete');\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">My Profile</h1>\n        <p className=\"mt-2 text-sm text-gray-600\">\n          Manage your personal information and preferences\n        </p>\n      </div>\n\n      {/* Progress and Rewards */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8\">\n        <div className=\"lg:col-span-2\">\n          <ProgressIndicator \n            currentStep={Math.ceil(profileCompletion / 25)}\n            totalSteps={4}\n            percentage={profileCompletion}\n            title=\"Profile Completion\"\n          />\n        </div>\n        <div>\n          <ProfileRewards \n            completedSections={completedSections}\n            totalXP={completedSections.length * 100}\n          />\n        </div>\n      </div>\n\n      {/* Message Display */}\n      {message.text && (\n        <div className={`mb-6 p-4 rounded-lg flex items-center ${\n          message.type === 'success' \n            ? 'bg-green-50 text-green-800 border border-green-200' \n            : 'bg-red-50 text-red-800 border border-red-200'\n        }`}>\n          {message.type === 'success' ? (\n            <CheckCircleIcon className=\"h-5 w-5 mr-2\" />\n          ) : (\n            <XCircleIcon className=\"h-5 w-5 mr-2\" />\n          )}\n          <span>{message.text}</span>\n        </div>\n      )}\n\n      {/* Profile Form */}\n      <div className=\"bg-white shadow-lg rounded-lg\">\n        <div className=\"p-6 space-y-8\">\n          {/* Personal Information */}\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <UserIcon className=\"h-5 w-5 mr-2 text-pink-500\" />\n              Personal Information\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  First Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={profileData.first_name}\n                  onChange={(e) => handleInputChange('first_name', e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 ${\n                    errors.first_name ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                  placeholder=\"John\"\n                />\n                {errors.first_name && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.first_name}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Last Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={profileData.last_name}\n                  onChange={(e) => handleInputChange('last_name', e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 ${\n                    errors.last_name ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                  placeholder=\"Doe\"\n                />\n                {errors.last_name && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.last_name}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Contact Information */}\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <EnvelopeIcon className=\"h-5 w-5 mr-2 text-pink-500\" />\n              Contact Information\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Email Address *\n                </label>\n                <input\n                  type=\"email\"\n                  value={profileData.email}\n                  onChange={(e) => handleInputChange('email', e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 ${\n                    errors.email ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                  placeholder=\"john@example.com\"\n                />\n                {errors.email && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                  <PhoneIcon className=\"h-4 w-4 mr-1\" />\n                  Phone Number\n                </label>\n                <input\n                  type=\"tel\"\n                  value={profileData.phone}\n                  onChange={(e) => handleInputChange('phone', e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 ${\n                    errors.phone ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                  placeholder=\"(555) 123-4567\"\n                />\n                {errors.phone && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.phone}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Work Information */}\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <BriefcaseIcon className=\"h-5 w-5 mr-2 text-pink-500\" />\n              Work Information\n            </h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                  <BriefcaseIcon className=\"h-4 w-4 mr-1\" />\n                  Job Title\n                </label>\n                <input\n                  type=\"text\"\n                  value={profileData.job_title}\n                  onChange={(e) => handleInputChange('job_title', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500\"\n                  placeholder=\"Grant Manager\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                  <BuildingOfficeIcon className=\"h-4 w-4 mr-1\" />\n                  Organization\n                </label>\n                <input\n                  type=\"text\"\n                  value={profileData.org_name}\n                  onChange={(e) => handleInputChange('org_name', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500\"\n                  placeholder=\"Urban Hope Foundation\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Preferences */}\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">\n              Notification Preferences\n            </h2>\n            <div className=\"space-y-3\">\n              {[\n                { key: 'email_notifications', label: 'Email Notifications', desc: 'Receive updates via email' },\n                { key: 'grant_alerts', label: 'Grant Alerts', desc: 'Get notified about new matching grants' },\n                { key: 'weekly_digest', label: 'Weekly Digest', desc: 'Receive a weekly summary of activity' },\n                { key: 'deadline_reminders', label: 'Deadline Reminders', desc: 'Get reminded of upcoming grant deadlines' }\n              ].map(pref => (\n                <label key={pref.key} className=\"flex items-start\">\n                  <input\n                    type=\"checkbox\"\n                    checked={profileData.notification_preferences[pref.key]}\n                    onChange={(e) => handleNotificationChange(pref.key, e.target.checked)}\n                    className=\"mt-1 h-4 w-4 text-pink-600 focus:ring-pink-500 border-gray-300 rounded\"\n                  />\n                  <div className=\"ml-3\">\n                    <span className=\"text-sm font-medium text-gray-700\">{pref.label}</span>\n                    <p className=\"text-xs text-gray-500\">{pref.desc}</p>\n                  </div>\n                </label>\n              ))}\n            </div>\n          </div>\n\n          {/* Timezone */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Timezone\n            </label>\n            <select\n              value={profileData.timezone}\n              onChange={(e) => handleInputChange('timezone', e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500\"\n            >\n              <option value=\"America/New_York\">Eastern Time</option>\n              <option value=\"America/Chicago\">Central Time</option>\n              <option value=\"America/Denver\">Mountain Time</option>\n              <option value=\"America/Los_Angeles\">Pacific Time</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-end space-x-3\">\n          <button\n            onClick={fetchProfile}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500\"\n            disabled={saving}\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSave}\n            disabled={saving}\n            className=\"px-4 py-2 text-sm font-medium text-white bg-pink-600 border border-transparent rounded-lg hover:bg-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-pink-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {saving ? 'Saving...' : 'Save Changes'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;"],"names":["_ref","currentStep","totalSteps","stepLabels","labels","length","_jsxs","className","children","_jsx","style","width","concat","Array","from","_","index","stepNumber","isCompleted","isCurrent","fill","viewBox","fillRule","d","clipRule","Math","round","completionPercentage","completedSections","totalSections","showCelebration","setShowCelebration","useState","previousCompletion","setPreviousCompletion","badges","id","name","description","icon","threshold","color","useEffect","setTimeout","earnedBadges","filter","badge","nextBadge","find","cx","cy","r","stroke","strokeWidth","strokeDasharray","PI","strokeDashoffset","strokeLinecap","x1","y1","x2","y2","offset","stopColor","map","ErrorVisualization","error","type","field","solution","onRetry","isExpanded","setIsExpanded","errorTypes","validation","title","network","permission","server","format","config","getSimpleExplanation","onClick","strokeLinejoin","getVisualDiagram","CheckCircleIcon","svgRef","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","ref","XCircleIcon","UserIcon","EnvelopeIcon","PhoneIcon","BriefcaseIcon","BuildingOfficeIcon","Profile","profileData","setProfileData","first_name","last_name","email","phone","job_title","org_name","timezone","notification_preferences","email_notifications","grant_alerts","weekly_digest","deadline_reminders","loading","setLoading","saving","setSaving","message","setMessage","text","errors","setErrors","profileCompletion","setProfileCompletion","fetchProfile","calculateCompletion","async","response","fetch","credentials","ok","data","json","profile","prevData","_objectSpread","status","window","location","href","console","fields","filledFields","trim","completion","handleInputChange","value","prev","push","ProgressIndicator","ceil","percentage","ProfileRewards","totalXP","onChange","e","target","placeholder","key","label","desc","pref","checked","handleNotificationChange","disabled","validateProfile","_profileData$first_na","_profileData$last_nam","_profileData$email","newErrors","test","keys","method","headers","body","JSON","stringify"],"sourceRoot":""}