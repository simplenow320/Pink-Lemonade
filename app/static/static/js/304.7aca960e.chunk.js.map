{"version":3,"file":"static/js/304.7aca960e.chunk.js","mappings":"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","sources":["pages/ImpactReport.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { motion } from 'framer-motion';\n\nconst ImpactReport = () => {\n  const [loading, setLoading] = useState(false);\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [editableContent, setEditableContent] = useState('');\n  const [error, setError] = useState('');\n  const [reportType, setReportType] = useState('Annual Impact Report');\n  const [targetAudience, setTargetAudience] = useState('Foundations and Major Donors');\n  const [periodStart, setPeriodStart] = useState('January 2024');\n  const [periodEnd, setPeriodEnd] = useState('December 2024');\n  const [metrics, setMetrics] = useState([\n    { name: '', target: '', actual: '' }\n  ]);\n\n  const addMetric = () => {\n    setMetrics([...metrics, { name: '', target: '', actual: '' }]);\n  };\n\n  const removeMetric = (index) => {\n    setMetrics(metrics.filter((_, i) => i !== index));\n  };\n\n  const updateMetric = (index, field, value) => {\n    const updated = [...metrics];\n    updated[index][field] = value;\n    setMetrics(updated);\n  };\n\n  const generateImpactReport = async () => {\n    setLoading(true);\n    setError('');\n    \n    try {\n      const response = await fetch('/api/writing/impact-report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          report_type: reportType,\n          target_audience: targetAudience,\n          period_start: periodStart,\n          period_end: periodEnd,\n          metrics: metrics.filter(m => m.name) // Only send metrics with names\n        }),\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.error || 'Failed to generate Impact Report');\n      }\n\n      setGeneratedContent(data.content);\n      setEditableContent(data.content);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const downloadContent = () => {\n    const element = document.createElement('a');\n    const file = new Blob([editableContent], { type: 'text/markdown' });\n    element.href = URL.createObjectURL(file);\n    element.download = 'impact_report.md';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(editableContent);\n    alert('Content copied to clipboard!');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <Link to=\"/smart-tools\" className=\"text-blue-600 hover:text-blue-700 mb-4 inline-block\">\n            ‚Üê Back to Smart Tools\n          </Link>\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n              <span className=\"text-3xl mr-3\">üìä</span>\n              Impact Report Generator\n            </h1>\n            <p className=\"text-xl text-gray-600\">\n              Generate comprehensive reports showing your programs' actual outcomes and community impact\n            </p>\n          </motion.div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Input Section */}\n          <motion.div\n            className=\"bg-white rounded-lg shadow-md p-6 max-h-screen overflow-y-auto\"\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n          >\n            <h2 className=\"text-2xl font-semibold text-gray-900 mb-6\">Report Configuration</h2>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Report Type\n                </label>\n                <select\n                  value={reportType}\n                  onChange={(e) => setReportType(e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"Annual Impact Report\">Annual Impact Report</option>\n                  <option value=\"Quarterly Report\">Quarterly Report</option>\n                  <option value=\"Grant Progress Report\">Grant Progress Report</option>\n                  <option value=\"Program Evaluation Report\">Program Evaluation Report</option>\n                  <option value=\"Donor Impact Report\">Donor Impact Report</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Target Audience\n                </label>\n                <select\n                  value={targetAudience}\n                  onChange={(e) => setTargetAudience(e.target.value)}\n                  className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                >\n                  <option value=\"Foundations and Major Donors\">Foundations & Major Donors</option>\n                  <option value=\"Board Members\">Board Members</option>\n                  <option value=\"Community Stakeholders\">Community Stakeholders</option>\n                  <option value=\"Government Agencies\">Government Agencies</option>\n                  <option value=\"General Public\">General Public</option>\n                </select>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Period Start\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={periodStart}\n                    onChange={(e) => setPeriodStart(e.target.value)}\n                    placeholder=\"e.g., January 2024\"\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Period End\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={periodEnd}\n                    onChange={(e) => setPeriodEnd(e.target.value)}\n                    placeholder=\"e.g., December 2024\"\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Key Metrics (Optional)\n                </label>\n                {metrics.map((metric, index) => (\n                  <div key={index} className=\"flex gap-2 mb-2\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Metric name\"\n                      value={metric.name}\n                      onChange={(e) => updateMetric(index, 'name', e.target.value)}\n                      className=\"flex-1 p-2 border border-gray-300 rounded-md text-sm\"\n                    />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Target\"\n                      value={metric.target}\n                      onChange={(e) => updateMetric(index, 'target', e.target.value)}\n                      className=\"w-24 p-2 border border-gray-300 rounded-md text-sm\"\n                    />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Actual\"\n                      value={metric.actual}\n                      onChange={(e) => updateMetric(index, 'actual', e.target.value)}\n                      className=\"w-24 p-2 border border-gray-300 rounded-md text-sm\"\n                    />\n                    <button\n                      onClick={() => removeMetric(index)}\n                      className=\"px-2 py-1 text-red-600 hover:text-red-800\"\n                    >\n                      ‚úï\n                    </button>\n                  </div>\n                ))}\n                <button\n                  onClick={addMetric}\n                  className=\"text-sm text-blue-600 hover:text-blue-700\"\n                >\n                  + Add Metric\n                </button>\n              </div>\n\n              <button\n                onClick={generateImpactReport}\n                disabled={loading}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                {loading ? 'Generating...' : 'Generate Impact Report'}\n              </button>\n\n              {error && (\n                <div className=\"mt-4 p-4 bg-red-50 border border-red-200 rounded-md\">\n                  <p className=\"text-red-700\">{error}</p>\n                </div>\n              )}\n            </div>\n\n            <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-md\">\n              <h3 className=\"font-semibold text-blue-900 mb-2\">Report Features:</h3>\n              <ul className=\"text-sm text-blue-800 space-y-1\">\n                <li>‚Ä¢ Uses your organization's actual data</li>\n                <li>‚Ä¢ Outcome tracking & metrics</li>\n                <li>‚Ä¢ Visual metrics recommendations</li>\n                <li>‚Ä¢ Stakeholder-specific formatting</li>\n                <li>‚Ä¢ Export-ready content</li>\n              </ul>\n            </div>\n          </motion.div>\n\n          {/* Output Section */}\n          <motion.div\n            className=\"bg-white rounded-lg shadow-md p-6\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.6, delay: 0.3 }}\n          >\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-2xl font-semibold text-gray-900\">Generated Report</h2>\n              {editableContent && (\n                <div className=\"space-x-2\">\n                  <button\n                    onClick={copyToClipboard}\n                    className=\"px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors\"\n                  >\n                    Copy\n                  </button>\n                  <button\n                    onClick={downloadContent}\n                    className=\"px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded-md hover:bg-blue-200 transition-colors\"\n                  >\n                    Download\n                  </button>\n                </div>\n              )}\n            </div>\n\n            {!editableContent ? (\n              <div className=\"text-center py-12 text-gray-500\">\n                <svg className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n                <p>Your Impact Report will appear here</p>\n                <p className=\"text-sm mt-2\">Click \"Generate Impact Report\" to begin</p>\n              </div>\n            ) : (\n              <div>\n                <textarea\n                  value={editableContent}\n                  onChange={(e) => setEditableContent(e.target.value)}\n                  className=\"w-full h-96 p-4 border border-gray-300 rounded-md font-mono text-sm focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Generated report will appear here...\"\n                />\n                <div className=\"mt-4 flex justify-between items-center text-sm text-gray-600\">\n                  <span>Word count: {editableContent.split(/\\s+/).filter(word => word.length > 0).length}</span>\n                  <span>‚úèÔ∏è Content is fully editable</span>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImpactReport;"],"names":["ImpactReport","loading","setLoading","useState","generatedContent","setGeneratedContent","editableContent","setEditableContent","error","setError","reportType","setReportType","targetAudience","setTargetAudience","periodStart","setPeriodStart","periodEnd","setPeriodEnd","metrics","setMetrics","name","target","actual","updateMetric","index","field","value","updated","_jsx","className","children","_jsxs","Link","to","motion","div","initial","opacity","y","animate","transition","duration","x","delay","onChange","e","type","placeholder","map","metric","onClick","filter","_","i","removeMetric","addMetric","async","response","fetch","method","headers","body","JSON","stringify","report_type","target_audience","period_start","period_end","m","data","json","ok","Error","content","err","message","disabled","copyToClipboard","navigator","clipboard","writeText","alert","downloadContent","element","document","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","removeChild","split","word","length","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sourceRoot":""}