{"version":3,"file":"static/js/186.8f827d2f.chunk.js","mappings":"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","sources":["components/ui/ProgressIndicator.jsx","components/ui/ProfileRewards.jsx","components/ui/Tooltip.jsx","pages/Organization.js","components/ui/ErrorVisualization.jsx"],"sourcesContent":["import React from 'react';\n\nconst ProgressIndicator = ({ currentStep = 1, totalSteps = 5, stepLabels = [] }) => {\n  const defaultLabels = [\n    'Basic Info',\n    'Programs',\n    'Capacity', \n    'Grant History',\n    'AI Learning'\n  ];\n\n  const labels = stepLabels.length ? stepLabels : defaultLabels;\n\n  return (\n    <div className=\"w-full max-w-4xl mx-auto py-6\">\n      {/* Main Progress Bar */}\n      <div className=\"relative mb-8\">\n        <div className=\"absolute top-4 left-0 w-full h-0.5 bg-gray-200\"></div>\n        <div \n          className=\"absolute top-4 left-0 h-0.5 bg-gradient-to-r from-pink-400 to-pink-600 transition-all duration-500 ease-out\"\n          style={{ width: `${((currentStep - 1) / (totalSteps - 1)) * 100}%` }}\n        ></div>\n        \n        {/* Step Circles */}\n        <div className=\"relative flex justify-between\">\n          {Array.from({ length: totalSteps }, (_, index) => {\n            const stepNumber = index + 1;\n            const isCompleted = stepNumber < currentStep;\n            const isCurrent = stepNumber === currentStep;\n            \n            return (\n              <div key={stepNumber} className=\"flex flex-col items-center\">\n                <div\n                  className={`\n                    w-8 h-8 rounded-full border-2 flex items-center justify-center text-sm font-medium transition-all duration-300\n                    ${isCompleted \n                      ? 'bg-pink-500 border-pink-500 text-white animate-pulse' \n                      : isCurrent\n                      ? 'bg-white border-pink-500 text-pink-500 shadow-lg scale-110' \n                      : 'bg-gray-50 border-gray-300 text-gray-400'\n                    }\n                  `}\n                >\n                  {isCompleted ? (\n                    <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                  ) : (\n                    stepNumber\n                  )}\n                </div>\n                \n                {/* Step Label */}\n                <div className=\"mt-2 text-center\">\n                  <div \n                    className={`\n                      text-xs font-medium transition-colors duration-300\n                      ${isCurrent ? 'text-pink-600' : isCompleted ? 'text-gray-700' : 'text-gray-400'}\n                    `}\n                  >\n                    {labels[index]}\n                  </div>\n                  {isCurrent && (\n                    <div className=\"text-xs text-gray-500 mt-1\">Current Step</div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      \n      {/* Progress Text */}\n      <div className=\"text-center\">\n        <div className=\"text-sm text-gray-600\">\n          Step {currentStep} of {totalSteps}\n        </div>\n        <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\n          <div \n            className=\"bg-gradient-to-r from-pink-400 to-pink-600 h-2 rounded-full transition-all duration-500 ease-out\"\n            style={{ width: `${(currentStep / totalSteps) * 100}%` }}\n          ></div>\n        </div>\n        <div className=\"text-xs text-gray-500 mt-1\">\n          {Math.round((currentStep / totalSteps) * 100)}% Complete\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressIndicator;","import React, { useState, useEffect } from 'react';\n\nconst ProfileRewards = ({ completionPercentage = 0, completedSections = [], totalSections = 5 }) => {\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [previousCompletion, setPreviousCompletion] = useState(completionPercentage);\n\n  // Badge definitions\n  const badges = [\n    {\n      id: 'started',\n      name: 'Getting Started',\n      description: 'You began your profile setup',\n      icon: '🚀',\n      threshold: 10,\n      color: 'pink'\n    },\n    {\n      id: 'half-way',\n      name: 'Making Progress',\n      description: 'You are halfway done with your profile',\n      icon: '⭐',\n      threshold: 50,\n      color: 'pink'\n    },\n    {\n      id: 'almost-there',\n      name: 'Almost Ready',\n      description: 'Your profile is nearly complete',\n      icon: '🎯',\n      threshold: 80,\n      color: 'pink'\n    },\n    {\n      id: 'complete',\n      name: 'Profile Master',\n      description: 'Your profile is 100% complete!',\n      icon: '🏆',\n      threshold: 100,\n      color: 'pink'\n    }\n  ];\n\n  useEffect(() => {\n    // Show celebration when completion increases\n    if (completionPercentage > previousCompletion) {\n      setShowCelebration(true);\n      setTimeout(() => setShowCelebration(false), 2000);\n    }\n    setPreviousCompletion(completionPercentage);\n  }, [completionPercentage, previousCompletion]);\n\n  const earnedBadges = badges.filter(badge => completionPercentage >= badge.threshold);\n  const nextBadge = badges.find(badge => completionPercentage < badge.threshold);\n\n  const getProgressColor = () => {\n    if (completionPercentage >= 100) return 'from-pink-400 to-pink-600';\n    if (completionPercentage >= 80) return 'from-pink-300 to-pink-500';\n    if (completionPercentage >= 50) return 'from-pink-200 to-pink-400';\n    return 'from-gray-200 to-gray-300';\n  };\n\n  return (\n    <div className=\"bg-white rounded-xl p-6 shadow-sm border border-pink-100\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Profile Progress</h3>\n        <div className=\"text-sm text-gray-500\">\n          {completedSections.length} of {totalSections} sections\n        </div>\n      </div>\n\n      {/* Progress Circle */}\n      <div className=\"flex items-center justify-center mb-6\">\n        <div className=\"relative\">\n          <svg className=\"w-24 h-24 transform -rotate-90\" viewBox=\"0 0 100 100\">\n            {/* Background circle */}\n            <circle\n              cx=\"50\"\n              cy=\"50\"\n              r=\"45\"\n              stroke=\"currentColor\"\n              strokeWidth=\"8\"\n              fill=\"transparent\"\n              className=\"text-gray-200\"\n            />\n            {/* Progress circle */}\n            <circle\n              cx=\"50\"\n              cy=\"50\"\n              r=\"45\"\n              stroke=\"url(#gradient)\"\n              strokeWidth=\"8\"\n              fill=\"transparent\"\n              strokeDasharray={`${2 * Math.PI * 45}`}\n              strokeDashoffset={`${2 * Math.PI * 45 * (1 - completionPercentage / 100)}`}\n              className=\"transition-all duration-1000 ease-out\"\n              strokeLinecap=\"round\"\n            />\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#f472b6\" />\n                <stop offset=\"100%\" stopColor=\"#ec4899\" />\n              </linearGradient>\n            </defs>\n          </svg>\n          \n          {/* Percentage text */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <div className={`text-2xl font-bold ${showCelebration ? 'animate-bounce' : ''} text-gray-900`}>\n                {completionPercentage}%\n              </div>\n              <div className=\"text-xs text-gray-500\">Complete</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Celebration Message */}\n      {showCelebration && (\n        <div className=\"mb-4 p-3 bg-pink-50 border border-pink-200 rounded-lg animate-fadeDown\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-pink-600 animate-bounce\">🎉</span>\n            <span className=\"text-sm font-medium text-pink-800\">Great job! Keep going!</span>\n          </div>\n        </div>\n      )}\n\n      {/* Earned Badges */}\n      {earnedBadges.length > 0 && (\n        <div className=\"mb-4\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Earned Badges</h4>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {earnedBadges.map((badge, index) => (\n              <div\n                key={badge.id}\n                className={`\n                  p-3 rounded-lg border-2 border-pink-200 bg-pink-50 transition-all duration-300\n                  ${showCelebration && index === earnedBadges.length - 1 ? 'animate-pulse' : ''}\n                `}\n              >\n                <div className=\"text-center\">\n                  <div className=\"text-2xl mb-1\">{badge.icon}</div>\n                  <div className=\"text-xs font-medium text-pink-800\">{badge.name}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Next Badge */}\n      {nextBadge && completionPercentage < 100 && (\n        <div className=\"mb-4\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Next Reward</h4>\n          <div className=\"p-3 rounded-lg bg-gray-50 border border-gray-200\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-2xl opacity-50\">{nextBadge.icon}</div>\n              <div className=\"flex-1\">\n                <div className=\"text-sm font-medium text-gray-900\">{nextBadge.name}</div>\n                <div className=\"text-xs text-gray-500\">{nextBadge.description}</div>\n                <div className=\"text-xs text-pink-600 mt-1\">\n                  {nextBadge.threshold - completionPercentage}% to go\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Quick Actions */}\n      <div className=\"space-y-2\">\n        {completionPercentage < 100 && (\n          <button className=\"w-full px-4 py-2 bg-pink-500 text-white rounded-lg font-medium hover:bg-pink-600 transition-colors duration-200 text-sm\">\n            Continue Profile Setup\n          </button>\n        )}\n        \n        {completionPercentage >= 50 && (\n          <button className=\"w-full px-4 py-2 bg-gray-100 text-gray-700 rounded-lg font-medium hover:bg-gray-200 transition-colors duration-200 text-sm\">\n            Find Grant Matches\n          </button>\n        )}\n      </div>\n\n      {/* Tips */}\n      <div className=\"mt-4 p-3 bg-gray-50 rounded-lg\">\n        <div className=\"text-xs text-gray-600\">\n          <span className=\"font-medium\">💡 Tip:</span> \n          {completionPercentage < 50 \n            ? ' Complete more sections to unlock better grant matches.'\n            : completionPercentage < 100\n            ? ' Finish your profile for the most accurate recommendations.'\n            : ' Your complete profile helps us find the best grants for you!'\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileRewards;","import React, { useState } from 'react';\n\nconst Tooltip = ({ \n  children, \n  content, \n  position = 'top',\n  size = 'medium',\n  delay = 200,\n  interactive = false \n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [showTimeout, setShowTimeout] = useState(null);\n  const [hideTimeout, setHideTimeout] = useState(null);\n\n  const handleMouseEnter = () => {\n    if (hideTimeout) {\n      clearTimeout(hideTimeout);\n      setHideTimeout(null);\n    }\n    \n    const timeout = setTimeout(() => {\n      setIsVisible(true);\n    }, delay);\n    setShowTimeout(timeout);\n  };\n\n  const handleMouseLeave = () => {\n    if (showTimeout) {\n      clearTimeout(showTimeout);\n      setShowTimeout(null);\n    }\n    \n    if (!interactive) {\n      const timeout = setTimeout(() => {\n        setIsVisible(false);\n      }, 100);\n      setHideTimeout(timeout);\n    }\n  };\n\n  const handleTooltipEnter = () => {\n    if (hideTimeout) {\n      clearTimeout(hideTimeout);\n      setHideTimeout(null);\n    }\n  };\n\n  const handleTooltipLeave = () => {\n    const timeout = setTimeout(() => {\n      setIsVisible(false);\n    }, 100);\n    setHideTimeout(timeout);\n  };\n\n  const getPositionClasses = () => {\n    switch (position) {\n      case 'top':\n        return 'bottom-full left-1/2 transform -translate-x-1/2 mb-2';\n      case 'bottom':\n        return 'top-full left-1/2 transform -translate-x-1/2 mt-2';\n      case 'left':\n        return 'right-full top-1/2 transform -translate-y-1/2 mr-2';\n      case 'right':\n        return 'left-full top-1/2 transform -translate-y-1/2 ml-2';\n      default:\n        return 'bottom-full left-1/2 transform -translate-x-1/2 mb-2';\n    }\n  };\n\n  const getArrowClasses = () => {\n    switch (position) {\n      case 'top':\n        return 'top-full left-1/2 transform -translate-x-1/2 border-l-transparent border-r-transparent border-b-transparent border-t-gray-800';\n      case 'bottom':\n        return 'bottom-full left-1/2 transform -translate-x-1/2 border-l-transparent border-r-transparent border-t-transparent border-b-gray-800';\n      case 'left':\n        return 'left-full top-1/2 transform -translate-y-1/2 border-t-transparent border-b-transparent border-r-transparent border-l-gray-800';\n      case 'right':\n        return 'right-full top-1/2 transform -translate-y-1/2 border-t-transparent border-b-transparent border-l-transparent border-r-gray-800';\n      default:\n        return 'top-full left-1/2 transform -translate-x-1/2 border-l-transparent border-r-transparent border-b-transparent border-t-gray-800';\n    }\n  };\n\n  const getSizeClasses = () => {\n    switch (size) {\n      case 'small':\n        return 'max-w-xs text-xs px-2 py-1';\n      case 'large':\n        return 'max-w-sm text-sm px-4 py-3';\n      default:\n        return 'max-w-xs text-sm px-3 py-2';\n    }\n  };\n\n  return (\n    <div className=\"relative inline-block\">\n      <div\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        className=\"cursor-help\"\n      >\n        {children}\n      </div>\n      \n      {isVisible && (\n        <div\n          className={`\n            absolute z-50 ${getPositionClasses()}\n            transition-all duration-200 ease-out\n            ${isVisible ? 'opacity-100 scale-100' : 'opacity-0 scale-95'}\n          `}\n          onMouseEnter={interactive ? handleTooltipEnter : undefined}\n          onMouseLeave={interactive ? handleTooltipLeave : undefined}\n        >\n          {/* Tooltip Content */}\n          <div className={`\n            bg-gray-800 text-white rounded-lg shadow-lg\n            ${getSizeClasses()}\n            animate-fadeDown\n          `}>\n            {typeof content === 'string' ? (\n              <div dangerouslySetInnerHTML={{ __html: content }} />\n            ) : (\n              content\n            )}\n          </div>\n          \n          {/* Arrow */}\n          <div className={`\n            absolute w-0 h-0 border-4 ${getArrowClasses()}\n          `}></div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Helper component for form field tooltips\nexport const FieldTooltip = ({ label, description, example, required = false }) => {\n  const content = (\n    <div>\n      <div className=\"font-medium text-white mb-1\">{label}</div>\n      <div className=\"text-gray-300 text-xs mb-2\">{description}</div>\n      {example && (\n        <div className=\"text-pink-200 text-xs italic\">\n          Example: {example}\n        </div>\n      )}\n      {required && (\n        <div className=\"text-pink-300 text-xs mt-1\">* Required field</div>\n      )}\n    </div>\n  );\n\n  return (\n    <Tooltip content={content} size=\"large\" interactive={true}>\n      <svg className=\"w-4 h-4 text-gray-400 hover:text-pink-500 transition-colors duration-200 cursor-help\" \n           fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n              d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n    </Tooltip>\n  );\n};\n\nexport default Tooltip;","import React, { useState, useEffect } from 'react';\nimport ProgressIndicator from '../components/ui/ProgressIndicator';\nimport ProfileRewards from '../components/ui/ProfileRewards';\nimport { FieldTooltip } from '../components/ui/Tooltip';\nimport ErrorVisualization from '../components/ui/ErrorVisualization';\n\nconst Organization = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState({});\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [completionPercentage, setCompletionPercentage] = useState(15);\n\n  // Mock completed sections for ProfileRewards\n  const completedSections = ['basic_info'];\n\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    // Clear error when user types\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: null }));\n    }\n  };\n\n  const validateStep = (step) => {\n    const newErrors = {};\n    \n    if (step === 1) {\n      if (!formData.legal_name) newErrors.legal_name = 'Organization name is required';\n      if (!formData.org_type) newErrors.org_type = 'Organization type is required';\n      if (formData.ein && !/^\\d{2}-\\d{7}$/.test(formData.ein)) {\n        newErrors.ein = 'EIN must be in format XX-XXXXXXX';\n      }\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleNext = () => {\n    if (validateStep(currentStep)) {\n      if (currentStep < 5) {\n        setCurrentStep(currentStep + 1);\n        setCompletionPercentage(prev => Math.min(prev + 20, 100));\n      }\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const renderStep1 = () => (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n            Organization Legal Name\n            <FieldTooltip \n              label=\"Legal Name\"\n              description=\"The official name registered with the IRS\"\n              example=\"Urban Hope Foundation Inc.\"\n              required={true}\n            />\n          </label>\n          <input\n            type=\"text\"\n            value={formData.legal_name || ''}\n            onChange={(e) => handleInputChange('legal_name', e.target.value)}\n            className={`form-input ${errors.legal_name ? 'border-red-300' : ''}`}\n            placeholder=\"Enter your organization's legal name\"\n          />\n          {errors.legal_name && (\n            <ErrorVisualization\n              type=\"validation\"\n              field=\"Organization Name\"\n              error={errors.legal_name}\n              solution=\"Enter the full legal name as registered with the IRS.\"\n            />\n          )}\n        </div>\n\n        <div>\n          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n            EIN (Optional)\n            <FieldTooltip \n              label=\"EIN\"\n              description=\"Your Employer Identification Number from the IRS\"\n              example=\"12-3456789\"\n            />\n          </label>\n          <input\n            type=\"text\"\n            value={formData.ein || ''}\n            onChange={(e) => handleInputChange('ein', e.target.value)}\n            className={`form-input ${errors.ein ? 'border-red-300' : ''}`}\n            placeholder=\"XX-XXXXXXX\"\n          />\n          {errors.ein && (\n            <ErrorVisualization\n              type=\"format\"\n              field=\"EIN\"\n              error={errors.ein}\n              solution=\"Use the format XX-XXXXXXX with numbers only.\"\n            />\n          )}\n        </div>\n      </div>\n\n      <div>\n        <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n          Organization Type\n          <FieldTooltip \n            label=\"Organization Type\"\n            description=\"What type of nonprofit are you?\"\n            example=\"Faith-based, Community-based, Educational\"\n            required={true}\n          />\n        </label>\n        <select\n          value={formData.org_type || ''}\n          onChange={(e) => handleInputChange('org_type', e.target.value)}\n          className={`form-select ${errors.org_type ? 'border-red-300' : ''}`}\n        >\n          <option value=\"\">Select organization type</option>\n          <option value=\"faith_based\">Faith-based</option>\n          <option value=\"community_based\">Community-based</option>\n          <option value=\"educational\">Educational</option>\n          <option value=\"health\">Health & Medical</option>\n          <option value=\"environmental\">Environmental</option>\n          <option value=\"arts\">Arts & Culture</option>\n          <option value=\"social_services\">Social Services</option>\n        </select>\n        {errors.org_type && (\n          <ErrorVisualization\n            type=\"validation\"\n            field=\"Organization Type\"\n            error={errors.org_type}\n            solution=\"Please select the type that best describes your organization.\"\n          />\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n            Year Founded\n            <FieldTooltip \n              label=\"Year Founded\"\n              description=\"When was your organization officially started?\"\n              example=\"2015\"\n            />\n          </label>\n          <input\n            type=\"number\"\n            value={formData.year_founded || ''}\n            onChange={(e) => handleInputChange('year_founded', e.target.value)}\n            className=\"form-input\"\n            placeholder=\"2020\"\n            min=\"1900\"\n            max=\"2025\"\n          />\n        </div>\n\n        <div>\n          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n            Website\n            <FieldTooltip \n              label=\"Website\"\n              description=\"Your organization's main website\"\n              example=\"https://urbanhope.org\"\n            />\n          </label>\n          <input\n            type=\"url\"\n            value={formData.website || ''}\n            onChange={(e) => handleInputChange('website', e.target.value)}\n            className=\"form-input\"\n            placeholder=\"https://yourorg.org\"\n          />\n        </div>\n      </div>\n\n      <div>\n        <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n          Mission Statement\n          <FieldTooltip \n            label=\"Mission\"\n            description=\"Your organization's main purpose and goals\"\n            example=\"Empowering urban communities through education and support\"\n          />\n        </label>\n        <textarea\n          value={formData.mission || ''}\n          onChange={(e) => handleInputChange('mission', e.target.value)}\n          className=\"form-input\"\n          rows=\"3\"\n          placeholder=\"Describe your organization's mission in simple terms...\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n        {[\n          { key: 'faith_based', label: 'Faith-based' },\n          { key: 'minority_led', label: 'Minority-led' },\n          { key: 'woman_led', label: 'Woman-led' },\n          { key: 'veteran_led', label: 'Veteran-led' }\n        ].map(({ key, label }) => (\n          <label key={key} className=\"flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={formData[key] || false}\n              onChange={(e) => handleInputChange(key, e.target.checked)}\n              className=\"form-checkbox\"\n            />\n            <span className=\"ml-2 text-sm text-gray-700\">{label}</span>\n          </label>\n        ))}\n      </div>\n    </div>\n  );\n\n  const renderStep2 = () => (\n    <div className=\"space-y-6\">\n      <div>\n        <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n          Primary Focus Areas\n          <FieldTooltip \n            label=\"Focus Areas\"\n            description=\"What areas does your organization focus on?\"\n            example=\"Education, Workforce Development, Community Health\"\n          />\n        </label>\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n          {[\n            'Education', 'Healthcare', 'Housing', 'Workforce Development',\n            'Youth Development', 'Senior Services', 'Mental Health', 'Food Security',\n            'Community Development', 'Arts & Culture', 'Environment', 'Justice'\n          ].map(area => (\n            <label key={area} className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={formData.primary_focus_areas?.includes(area) || false}\n                onChange={(e) => {\n                  const current = formData.primary_focus_areas || [];\n                  const updated = e.target.checked\n                    ? [...current, area]\n                    : current.filter(item => item !== area);\n                  handleInputChange('primary_focus_areas', updated);\n                }}\n                className=\"form-checkbox\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">{area}</span>\n            </label>\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n          Programs & Services\n          <FieldTooltip \n            label=\"Programs\"\n            description=\"Describe the main programs and services you offer\"\n            example=\"After-school tutoring, job training academy, food pantry\"\n          />\n        </label>\n        <textarea\n          value={formData.programs_services || ''}\n          onChange={(e) => handleInputChange('programs_services', e.target.value)}\n          className=\"form-input\"\n          rows=\"3\"\n          placeholder=\"Describe your main programs and services...\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n            Primary City\n            <FieldTooltip \n              label=\"Primary City\"\n              description=\"The main city where you operate\"\n              example=\"Atlanta\"\n            />\n          </label>\n          <input\n            type=\"text\"\n            value={formData.primary_city || ''}\n            onChange={(e) => handleInputChange('primary_city', e.target.value)}\n            className=\"form-input\"\n            placeholder=\"City name\"\n          />\n        </div>\n\n        <div>\n          <label className=\"flex items-center text-sm font-medium text-gray-700 mb-2\">\n            Primary State\n            <FieldTooltip \n              label=\"Primary State\"\n              description=\"The main state where you operate\"\n              example=\"Georgia\"\n            />\n          </label>\n          <select\n            value={formData.primary_state || ''}\n            onChange={(e) => handleInputChange('primary_state', e.target.value)}\n            className=\"form-select\"\n          >\n            <option value=\"\">Select state</option>\n            <option value=\"Alabama\">Alabama</option>\n            <option value=\"Georgia\">Georgia</option>\n            <option value=\"Florida\">Florida</option>\n            <option value=\"North Carolina\">North Carolina</option>\n            <option value=\"South Carolina\">South Carolina</option>\n            <option value=\"Tennessee\">Tennessee</option>\n            {/* Add more states as needed */}\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderStepContent = () => {\n    switch (currentStep) {\n      case 1:\n        return renderStep1();\n      case 2:\n        return renderStep2();\n      case 3:\n        return <div className=\"text-center py-8 text-gray-500\">Step 3: Organizational Capacity (Coming Soon)</div>;\n      case 4:\n        return <div className=\"text-center py-8 text-gray-500\">Step 4: Grant History (Coming Soon)</div>;\n      case 5:\n        return <div className=\"text-center py-8 text-gray-500\">Step 5: AI Learning (Coming Soon)</div>;\n      default:\n        return renderStep1();\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto space-y-8\">\n      {/* Header */}\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900\">Organization Profile Setup</h1>\n        <p className=\"mt-2 text-gray-600\">Tell us about your organization to get better grant matches</p>\n      </div>\n\n      {/* Progress Indicator */}\n      <ProgressIndicator currentStep={currentStep} totalSteps={5} />\n\n      {/* Main Content */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n        {/* Form Section */}\n        <div className=\"lg:col-span-3\">\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">\n              {currentStep === 1 && 'Basic Information'}\n              {currentStep === 2 && 'Programs & Services'}\n              {currentStep === 3 && 'Organizational Capacity'}\n              {currentStep === 4 && 'Grant History'}\n              {currentStep === 5 && 'AI Learning Settings'}\n            </h2>\n\n            {renderStepContent()}\n\n            {/* Navigation Buttons */}\n            <div className=\"flex justify-between mt-8 pt-6 border-t border-gray-200\">\n              <button\n                onClick={handlePrevious}\n                disabled={currentStep === 1}\n                className={`px-6 py-2 rounded-lg font-medium transition-colors duration-200 ${\n                  currentStep === 1\n                    ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                }`}\n              >\n                Previous\n              </button>\n\n              <button\n                onClick={handleNext}\n                disabled={currentStep === 5}\n                className={`px-6 py-2 rounded-lg font-medium transition-colors duration-200 ${\n                  currentStep === 5\n                    ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                    : 'bg-pink-500 text-white hover:bg-pink-600'\n                }`}\n              >\n                {currentStep === 5 ? 'Complete' : 'Continue'}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"lg:col-span-1\">\n          <ProfileRewards \n            completionPercentage={completionPercentage}\n            completedSections={completedSections}\n            totalSections={5}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Organization;","import React, { useState } from 'react';\n\nconst ErrorVisualization = ({ \n  error, \n  type = 'validation', \n  field = '', \n  solution = '',\n  onRetry = null \n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  // Error type configurations\n  const errorTypes = {\n    validation: {\n      icon: '⚠️',\n      color: 'yellow',\n      title: 'Input Needs Fixing'\n    },\n    network: {\n      icon: '📡',\n      color: 'blue',\n      title: 'Connection Problem'\n    },\n    permission: {\n      icon: '🔒',\n      color: 'red',\n      title: 'Access Denied'\n    },\n    server: {\n      icon: '🔧',\n      color: 'orange',\n      title: 'System Issue'\n    },\n    format: {\n      icon: '📝',\n      color: 'purple',\n      title: 'Format Problem'\n    }\n  };\n\n  const config = errorTypes[type] || errorTypes.validation;\n\n  // Generate simple explanation based on error type\n  const getSimpleExplanation = () => {\n    switch (type) {\n      case 'validation':\n        return `The ${field || 'information'} you entered doesn't match what we need.`;\n      case 'network':\n        return 'We cannot connect to our servers right now.';\n      case 'permission':\n        return 'You do not have permission to do this action.';\n      case 'server':\n        return 'Our system is having trouble. This is not your fault.';\n      case 'format':\n        return `The ${field || 'format'} is not correct.`;\n      default:\n        return 'Something went wrong.';\n    }\n  };\n\n  // Get visual diagram based on error type\n  const getVisualDiagram = () => {\n    switch (type) {\n      case 'validation':\n        return (\n          <div className=\"flex items-center space-x-2 p-3 bg-yellow-50 rounded-lg border border-yellow-200\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center\">\n                <svg className=\"w-4 h-4 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.96-.833-2.732 0L3.732 19c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"text-sm font-medium text-yellow-800\">Check Your Input</div>\n              <div className=\"text-xs text-yellow-700 mt-1\">\n                {field && `Look at the \"${field}\" field again`}\n              </div>\n            </div>\n          </div>\n        );\n      \n      case 'network':\n        return (\n          <div className=\"flex items-center space-x-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-blue-600\">💻</span>\n              </div>\n              <div className=\"text-blue-600\">→</div>\n              <div className=\"w-8 h-8 bg-red-100 rounded-full flex items-center justify-center animate-pulse\">\n                <span className=\"text-red-600\">❌</span>\n              </div>\n              <div className=\"text-blue-600\">→</div>\n              <div className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-gray-600\">🏢</span>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'format':\n        return (\n          <div className=\"p-3 bg-purple-50 rounded-lg border border-purple-200\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-xs text-purple-700 font-medium mb-2\">What You Entered</div>\n                <div className=\"p-2 bg-red-100 rounded border border-red-200 text-red-700 text-sm\">\n                  ❌ Wrong format\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-xs text-purple-700 font-medium mb-2\">What We Need</div>\n                <div className=\"p-2 bg-green-100 rounded border border-green-200 text-green-700 text-sm\">\n                  ✅ Right format\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return (\n          <div className=\"p-3 bg-gray-50 rounded-lg border border-gray-200\">\n            <div className=\"text-center text-gray-600\">\n              <div className=\"text-2xl mb-2\">{config.icon}</div>\n              <div className=\"text-sm\">{config.title}</div>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"bg-white border-l-4 border-pink-400 rounded-lg shadow-sm p-4 animate-fadeDown\">\n      {/* Header */}\n      <div className=\"flex items-start space-x-3\">\n        <div className=\"flex-shrink-0\">\n          <div className=\"w-10 h-10 bg-pink-100 rounded-full flex items-center justify-center\">\n            <span className=\"text-lg\">{config.icon}</span>\n          </div>\n        </div>\n        \n        <div className=\"flex-1 min-w-0\">\n          <h3 className=\"text-lg font-medium text-gray-900\">{config.title}</h3>\n          <p className=\"text-sm text-gray-600 mt-1\">{getSimpleExplanation()}</p>\n          \n          {/* Original error message (if expanded) */}\n          {isExpanded && error && (\n            <div className=\"mt-3 p-3 bg-gray-50 rounded-lg\">\n              <div className=\"text-xs text-gray-500 font-medium mb-1\">Technical Details:</div>\n              <div className=\"text-xs text-gray-700 font-mono\">{error}</div>\n            </div>\n          )}\n        </div>\n\n        {/* Expand button */}\n        <button\n          onClick={() => setIsExpanded(!isExpanded)}\n          className=\"flex-shrink-0 text-gray-400 hover:text-gray-600 transition-colors duration-200\"\n        >\n          <svg \n            className={`w-5 h-5 transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Visual Diagram */}\n      <div className=\"mt-4\">\n        {getVisualDiagram()}\n      </div>\n\n      {/* Solution */}\n      {solution && (\n        <div className=\"mt-4 p-3 bg-green-50 rounded-lg border border-green-200\">\n          <div className=\"flex items-start space-x-2\">\n            <svg className=\"w-5 h-5 text-green-600 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <div>\n              <div className=\"text-sm font-medium text-green-800\">How to Fix This</div>\n              <div className=\"text-sm text-green-700 mt-1\">{solution}</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"mt-4 flex flex-wrap gap-2\">\n        {onRetry && (\n          <button\n            onClick={onRetry}\n            className=\"px-4 py-2 bg-pink-500 text-white rounded-lg font-medium hover:bg-pink-600 transition-colors duration-200 text-sm\"\n          >\n            Try Again\n          </button>\n        )}\n        \n        {type === 'validation' && (\n          <button\n            onClick={() => setIsExpanded(!isExpanded)}\n            className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg font-medium hover:bg-gray-200 transition-colors duration-200 text-sm\"\n          >\n            Need Help?\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Helper component for common error scenarios\nexport const FormValidationError = ({ field, value, expected, onFix }) => (\n  <ErrorVisualization\n    type=\"validation\"\n    field={field}\n    error={`Invalid ${field}: ${value}`}\n    solution={`Enter ${expected}. Look for the format example above the field.`}\n    onRetry={onFix}\n  />\n);\n\nexport const NetworkError = ({ onRetry }) => (\n  <ErrorVisualization\n    type=\"network\"\n    error=\"Network connection failed\"\n    solution=\"Check your internet connection and try again. If this keeps happening, wait a few minutes.\"\n    onRetry={onRetry}\n  />\n);\n\nexport const ServerError = ({ onRetry }) => (\n  <ErrorVisualization\n    type=\"server\"\n    error=\"Internal server error\"\n    solution=\"Our team has been notified. Please try again in a few minutes.\"\n    onRetry={onRetry}\n  />\n);\n\nexport default ErrorVisualization;"],"names":["_ref","currentStep","totalSteps","stepLabels","labels","length","_jsxs","className","children","_jsx","style","width","concat","Array","from","_","index","stepNumber","isCompleted","isCurrent","fill","viewBox","fillRule","d","clipRule","Math","round","completionPercentage","completedSections","totalSections","showCelebration","setShowCelebration","useState","previousCompletion","setPreviousCompletion","badges","id","name","description","icon","threshold","color","useEffect","setTimeout","earnedBadges","filter","badge","nextBadge","find","cx","cy","r","stroke","strokeWidth","strokeDasharray","PI","strokeDashoffset","strokeLinecap","x1","y1","x2","y2","offset","stopColor","map","Tooltip","content","position","size","delay","interactive","isVisible","setIsVisible","showTimeout","setShowTimeout","hideTimeout","setHideTimeout","onMouseEnter","handleMouseEnter","clearTimeout","timeout","onMouseLeave","handleMouseLeave","getPositionClasses","handleTooltipEnter","undefined","handleTooltipLeave","getSizeClasses","dangerouslySetInnerHTML","__html","getArrowClasses","FieldTooltip","_ref2","label","example","required","strokeLinejoin","Organization","setCurrentStep","formData","setFormData","errors","setErrors","loading","setLoading","setCompletionPercentage","handleInputChange","field","value","prev","_objectSpread","renderStep1","type","legal_name","onChange","e","target","placeholder","ErrorVisualization","error","solution","ein","org_type","year_founded","min","max","website","mission","rows","key","checked","ProgressIndicator","renderStepContent","area","_formData$primary_foc","primary_focus_areas","includes","current","updated","item","programs_services","primary_city","primary_state","onClick","handlePrevious","disabled","handleNext","step","newErrors","test","Object","keys","validateStep","ProfileRewards","onRetry","isExpanded","setIsExpanded","errorTypes","validation","title","network","permission","server","format","config","getSimpleExplanation","getVisualDiagram"],"sourceRoot":""}