{"version":3,"file":"static/js/810.ec516ed6.chunk.js","mappings":"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","sources":["hooks/useGrants.js","utils/formatters.js","pages/Dashboard.js","components/ui/ProfileRewards.jsx","components/ui/WelcomeAnimation.jsx","components/ui/ErrorVisualization.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { getGrants, getDashboardData } from '../utils/api';\n\nexport function useGrants(filters = {}) {\n  const [grants, setGrants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [dashboardData, setDashboardData] = useState(null);\n\n  // Fetch grants\n  const fetchGrants = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await getGrants(filters);\n      setGrants(data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching grants:', err);\n      setError('Failed to fetch grants. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [filters]);\n\n  // Fetch dashboard data\n  const fetchDashboardData = useCallback(async () => {\n    try {\n      const data = await getDashboardData();\n      setDashboardData(data);\n    } catch (err) {\n      console.error('Error fetching dashboard data:', err);\n      // We don't set error state here to avoid blocking the UI\n    }\n  }, []);\n\n  // Load grants on mount and when filters change\n  useEffect(() => {\n    fetchGrants();\n  }, [fetchGrants]);\n\n  // Load dashboard data if requested\n  useEffect(() => {\n    if (filters.includeDashboard) {\n      fetchDashboardData();\n    }\n  }, [fetchDashboardData, filters.includeDashboard]);\n\n  // Function to refresh data\n  const refreshData = useCallback(() => {\n    fetchGrants();\n    if (filters.includeDashboard) {\n      fetchDashboardData();\n    }\n  }, [fetchGrants, fetchDashboardData, filters.includeDashboard]);\n\n  return {\n    grants,\n    loading,\n    error,\n    refreshData,\n    dashboardData,\n  };\n}\n\nexport default useGrants;\n","// Date formatters\nexport const formatDate = (dateString) => {\n  if (!dateString) return 'N/A';\n  \n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', { \n    year: 'numeric', \n    month: 'short', \n    day: 'numeric' \n  });\n};\n\nexport const formatDateTime = (dateString) => {\n  if (!dateString) return 'N/A';\n  \n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', { \n    year: 'numeric', \n    month: 'short', \n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\n// Currency formatter\nexport const formatCurrency = (amount) => {\n  if (amount === null || amount === undefined) return 'N/A';\n  \n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(amount);\n};\n\n// Get status class for styling\nexport const getStatusClass = (status) => {\n  if (!status) return '';\n  \n  const statusMap = {\n    'Not Started': 'bg-gray-200 text-gray-700',\n    'In Progress': 'bg-blue-100 text-blue-800',\n    'Submitted': 'bg-yellow-100 text-yellow-800',\n    'Won': 'bg-green-100 text-green-800',\n    'Declined': 'bg-red-100 text-red-800'\n  };\n  \n  return statusMap[status] || 'bg-gray-100 text-gray-800';\n};\n\n// Get date urgency class\nexport const getDateUrgencyClass = (dateString) => {\n  if (!dateString) return '';\n  \n  const date = new Date(dateString);\n  const today = new Date();\n  const diffDays = Math.ceil((date - today) / (1000 * 60 * 60 * 24));\n  \n  if (diffDays < 0) {\n    return 'text-red-600 font-medium';\n  } else if (diffDays <= 14) {\n    return 'text-yellow-600 font-medium';\n  } else {\n    return 'text-blue-600';\n  }\n};\n\n// Get match score class\nexport const getMatchScoreClass = (score) => {\n  if (score === null || score === undefined) return '';\n  \n  if (score >= 80) {\n    return 'text-green-600 font-medium';\n  } else if (score >= 50) {\n    return 'text-yellow-600 font-medium';\n  } else {\n    return 'text-gray-600';\n  }\n};\n\n// Format match score\nexport const formatMatchScore = (score) => {\n  if (score === null || score === undefined) return 'N/A';\n  return `${Math.round(score)}%`;\n};\n\n// Truncate text\nexport const truncateText = (text, maxLength = 100) => {\n  if (!text) return '';\n  \n  if (text.length <= maxLength) {\n    return text;\n  }\n  \n  return text.substring(0, maxLength) + '...';\n};\n\n// Format duration\nexport const formatDuration = (durationString) => {\n  if (!durationString) return 'N/A';\n  \n  // Expected format from the API is like '0:02:45.123456' (h:mm:ss.microseconds)\n  // We'll just extract hours, minutes, seconds\n  const parts = durationString.split(':');\n  \n  if (parts.length < 3) return durationString;\n  \n  const hours = parseInt(parts[0]);\n  const minutes = parseInt(parts[1]);\n  const seconds = parseInt(parts[2]);\n  \n  let result = '';\n  \n  if (hours > 0) {\n    result += `${hours} hour${hours !== 1 ? 's' : ''} `;\n  }\n  \n  if (minutes > 0 || hours > 0) {\n    result += `${minutes} minute${minutes !== 1 ? 's' : ''} `;\n  }\n  \n  result += `${seconds} second${seconds !== 1 ? 's' : ''}`;\n  \n  return result;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGrants } from '../hooks/useGrants';\nimport { formatCurrency, formatDate } from '../utils/formatters';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title } from 'chart.js';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport WelcomeAnimation from '../components/ui/WelcomeAnimation';\nimport ProfileRewards from '../components/ui/ProfileRewards';\nimport ErrorVisualization from '../components/ui/ErrorVisualization';\n\n// Register Chart.js components\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);\n\nconst Dashboard = () => {\n  const { grants, loading, error, dashboardData } = useGrants({ includeDashboard: true });\n  const [upcomingGrants, setUpcomingGrants] = useState([]);\n  const [topMatchingGrants, setTopMatchingGrants] = useState([]);\n\n  useEffect(() => {\n    if (grants && grants.length > 0) {\n      // Filter grants for upcoming deadlines (next 30 days)\n      const today = new Date();\n      const thirtyDaysFromNow = new Date();\n      thirtyDaysFromNow.setDate(today.getDate() + 30);\n      \n      const upcoming = grants\n        .filter(grant => {\n          if (!grant.due_date) return false;\n          const dueDate = new Date(grant.due_date);\n          return dueDate >= today && dueDate <= thirtyDaysFromNow;\n        })\n        .sort((a, b) => new Date(a.due_date) - new Date(b.due_date))\n        .slice(0, 5);\n      \n      setUpcomingGrants(upcoming);\n      \n      // Filter for top matching grants\n      const matching = [...grants]\n        .filter(grant => grant.match_score >= 70)\n        .sort((a, b) => b.match_score - a.match_score)\n        .slice(0, 5);\n      \n      setTopMatchingGrants(matching);\n    }\n  }, [grants]);\n  \n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-pink-500\"></div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <ErrorVisualization\n        type=\"server\"\n        error={error}\n        solution=\"Try refreshing the page. If this keeps happening, check your internet connection.\"\n        onRetry={() => window.location.reload()}\n      />\n    );\n  }\n\n  // Format status name with color\n  const getStatusBadgeClass = (status) => {\n    switch (status) {\n      case 'Not Started':\n        return 'bg-gray-100 text-gray-800';\n      case 'In Progress':\n        return 'bg-blue-100 text-blue-800';\n      case 'Submitted':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'Won':\n        return 'bg-green-100 text-green-800';\n      case 'Declined':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Format match score with color\n  const getMatchScoreClass = (score) => {\n    if (score >= 90) return 'text-green-600';\n    if (score >= 70) return 'text-green-500';\n    if (score >= 50) return 'text-yellow-500';\n    if (score >= 30) return 'text-orange-500';\n    return 'text-red-500';\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Welcome Animation */}\n      <WelcomeAnimation \n        userName=\"Admin\"\n        orgName=\"Pink Lemonade User\"\n        isFirstVisit={!grants || grants.length === 0}\n      />\n\n      {/* Page Header with CTA */}\n      <div className=\"flex flex-col lg:flex-row justify-between lg:items-center\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Grant Management Dashboard</h1>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Overview of your grant activities and opportunities\n          </p>\n        </div>\n        <div className=\"mt-4 lg:mt-0 flex flex-col sm:flex-row gap-3\">\n          <Link\n            to=\"/scraper\"\n            className=\"btn-primary inline-flex items-center justify-center\"\n          >\n            <svg className=\"mr-2 h-4 w-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n            Find New Grants\n          </Link>\n          <Link\n            to=\"/grants\"\n            className=\"btn-secondary inline-flex items-center justify-center\"\n          >\n            View All Grants\n          </Link>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      {dashboardData && (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-5\">\n          <div className=\"bg-white overflow-hidden shadow-sm rounded-xl p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0 bg-orange-100 rounded-lg p-3\">\n                <svg className=\"h-6 w-6 text-orange-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    Available Grants\n                  </dt>\n                  <dd className=\"flex items-baseline\">\n                    <div className=\"text-2xl font-semibold text-gray-900\">\n                      {dashboardData.total_grants || 0}\n                    </div>\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white overflow-hidden shadow-sm rounded-xl p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0 bg-green-100 rounded-lg p-3\">\n                <svg className=\"h-6 w-6 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                </svg>\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    Total Funding Available\n                  </dt>\n                  <dd className=\"flex items-baseline\">\n                    <div className=\"text-2xl font-semibold text-gray-900\">\n                      {dashboardData.total_funding ? formatCurrency(dashboardData.total_funding) : '$0'}\n                    </div>\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white overflow-hidden shadow-sm rounded-xl p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0 bg-blue-100 rounded-lg p-3\">\n                <svg className=\"h-6 w-6 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                </svg>\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    High Matching Grants\n                  </dt>\n                  <dd className=\"flex items-baseline\">\n                    <div className=\"text-2xl font-semibold text-gray-900\">\n                      {dashboardData.high_match_count || 0}\n                    </div>\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white overflow-hidden shadow-sm rounded-xl p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0 bg-purple-100 rounded-lg p-3\">\n                <svg className=\"h-6 w-6 text-purple-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">\n                    Submitted Grants\n                  </dt>\n                  <dd className=\"flex items-baseline\">\n                    <div className=\"text-2xl font-semibold text-gray-900\">\n                      {dashboardData.status_counts?.Submitted || 0}\n                    </div>\n                  </dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Charts and Profile Section */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        {/* Left column - Charts */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Grant Status Chart */}\n          <div className=\"bg-white shadow-sm rounded-xl overflow-hidden p-6\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Grant Status Overview</h2>\n            <div className=\"h-64 flex items-center justify-center\">\n              {dashboardData?.status_counts && Object.keys(dashboardData.status_counts).length > 0 ? (\n                <div className=\"text-center text-gray-500\">\n                  Chart visualization coming soon\n                </div>\n              ) : (\n                <div className=\"text-center text-gray-500\">\n                  No data available\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        {/* Right column - Profile Rewards */}\n        <div className=\"lg:col-span-1 space-y-6\">\n          <ProfileRewards \n            completionPercentage={85}\n            completedSections={['basic_info', 'programs', 'capacity']}\n            totalSections={5}\n          />\n        </div>\n      </div>\n\n      {/* Grant Lists Section */}\n      <div className=\"space-y-8\">\n        {/* Upcoming Deadlines */}\n        <div className=\"bg-white shadow-sm rounded-xl overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h2 className=\"text-lg font-medium text-gray-900\">Upcoming Deadlines</h2>\n          </div>\n          {upcomingGrants.length > 0 ? (\n            <div className=\"divide-y divide-gray-200\">\n              {upcomingGrants.map((grant) => (\n                <Link key={grant.id} to={`/grants/${grant.id}`} className=\"block px-6 py-4 hover:bg-gray-50 transition-colors cursor-pointer\">\n                  <div className=\"flex items-center\">\n                    <div className=\"min-w-0 flex-1\">\n                      <h3 className=\"text-sm font-medium text-gray-900 hover:text-orange-600\">\n                        {grant.title}\n                      </h3>\n                      <div className=\"mt-1 flex items-center text-sm text-gray-500\">\n                        <span className=\"truncate\">{grant.funder}</span>\n                        <span className=\"mx-1\">•</span>\n                        <span className=\"font-medium text-pink-600\">\n                          Due: {formatDate(grant.due_date)}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"ml-6 flex-shrink-0\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusBadgeClass(grant.status)}`}>\n                        {grant.status}\n                      </span>\n                    </div>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          ) : (\n            <div className=\"px-6 py-10 text-center text-gray-500\">\n              <p className=\"text-sm\">No upcoming deadlines</p>\n            </div>\n          )}\n          <div className=\"px-6 py-3 bg-gray-50 text-right\">\n            <Link to=\"/grants\" className=\"text-sm font-medium text-orange-600 hover:text-orange-500\">\n              View all grants →\n            </Link>\n          </div>\n        </div>\n\n        {/* High Matching Grants */}\n        <div className=\"bg-white shadow-sm rounded-xl overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h2 className=\"text-lg font-medium text-gray-900\">High Matching Grants</h2>\n          </div>\n          {topMatchingGrants.length > 0 ? (\n            <div className=\"divide-y divide-gray-200\">\n              {topMatchingGrants.map((grant) => (\n                <Link key={grant.id} to={`/grants/${grant.id}`} className=\"block px-6 py-4 hover:bg-gray-50 transition-colors cursor-pointer\">\n                  <div className=\"flex items-center\">\n                    <div className=\"min-w-0 flex-1\">\n                      <h3 className=\"text-sm font-medium text-gray-900 hover:text-orange-600\">\n                        {grant.title}\n                      </h3>\n                      <div className=\"mt-1 flex items-center text-sm text-gray-500\">\n                        <span className=\"truncate\">{grant.funder}</span>\n                        {grant.amount && (\n                          <>\n                            <span className=\"mx-1\">•</span>\n                            <span>{formatCurrency(grant.amount)}</span>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"ml-6 flex-shrink-0\">\n                      <span className={`font-medium ${getMatchScoreClass(grant.match_score)}`}>\n                        {grant.match_score}% Match\n                      </span>\n                    </div>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          ) : (\n            <div className=\"px-6 py-10 text-center text-gray-500\">\n              <p className=\"text-sm\">No high matching grants found</p>\n            </div>\n          )}\n          <div className=\"px-6 py-3 bg-gray-50 text-right\">\n            <Link to=\"/grants\" className=\"text-sm font-medium text-orange-600 hover:text-orange-500\">\n              View all grants →\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;","import React, { useState, useEffect } from 'react';\n\nconst ProfileRewards = ({ completionPercentage = 0, completedSections = [], totalSections = 5 }) => {\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [previousCompletion, setPreviousCompletion] = useState(completionPercentage);\n\n  // Badge definitions\n  const badges = [\n    {\n      id: 'started',\n      name: 'Getting Started',\n      description: 'You began your profile setup',\n      icon: '🚀',\n      threshold: 10,\n      color: 'pink'\n    },\n    {\n      id: 'half-way',\n      name: 'Making Progress',\n      description: 'You are halfway done with your profile',\n      icon: '⭐',\n      threshold: 50,\n      color: 'pink'\n    },\n    {\n      id: 'almost-there',\n      name: 'Almost Ready',\n      description: 'Your profile is nearly complete',\n      icon: '🎯',\n      threshold: 80,\n      color: 'pink'\n    },\n    {\n      id: 'complete',\n      name: 'Profile Master',\n      description: 'Your profile is 100% complete!',\n      icon: '🏆',\n      threshold: 100,\n      color: 'pink'\n    }\n  ];\n\n  useEffect(() => {\n    // Show celebration when completion increases\n    if (completionPercentage > previousCompletion) {\n      setShowCelebration(true);\n      setTimeout(() => setShowCelebration(false), 2000);\n    }\n    setPreviousCompletion(completionPercentage);\n  }, [completionPercentage, previousCompletion]);\n\n  const earnedBadges = badges.filter(badge => completionPercentage >= badge.threshold);\n  const nextBadge = badges.find(badge => completionPercentage < badge.threshold);\n\n  const getProgressColor = () => {\n    if (completionPercentage >= 100) return 'from-pink-400 to-pink-600';\n    if (completionPercentage >= 80) return 'from-pink-300 to-pink-500';\n    if (completionPercentage >= 50) return 'from-pink-200 to-pink-400';\n    return 'from-gray-200 to-gray-300';\n  };\n\n  return (\n    <div className=\"bg-white rounded-xl p-6 shadow-sm border border-pink-100\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Profile Progress</h3>\n        <div className=\"text-sm text-gray-500\">\n          {completedSections.length} of {totalSections} sections\n        </div>\n      </div>\n\n      {/* Progress Circle */}\n      <div className=\"flex items-center justify-center mb-6\">\n        <div className=\"relative\">\n          <svg className=\"w-24 h-24 transform -rotate-90\" viewBox=\"0 0 100 100\">\n            {/* Background circle */}\n            <circle\n              cx=\"50\"\n              cy=\"50\"\n              r=\"45\"\n              stroke=\"currentColor\"\n              strokeWidth=\"8\"\n              fill=\"transparent\"\n              className=\"text-gray-200\"\n            />\n            {/* Progress circle */}\n            <circle\n              cx=\"50\"\n              cy=\"50\"\n              r=\"45\"\n              stroke=\"url(#gradient)\"\n              strokeWidth=\"8\"\n              fill=\"transparent\"\n              strokeDasharray={`${2 * Math.PI * 45}`}\n              strokeDashoffset={`${2 * Math.PI * 45 * (1 - completionPercentage / 100)}`}\n              className=\"transition-all duration-1000 ease-out\"\n              strokeLinecap=\"round\"\n            />\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop offset=\"0%\" stopColor=\"#f472b6\" />\n                <stop offset=\"100%\" stopColor=\"#ec4899\" />\n              </linearGradient>\n            </defs>\n          </svg>\n          \n          {/* Percentage text */}\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <div className={`text-2xl font-bold ${showCelebration ? 'animate-bounce' : ''} text-gray-900`}>\n                {completionPercentage}%\n              </div>\n              <div className=\"text-xs text-gray-500\">Complete</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Celebration Message */}\n      {showCelebration && (\n        <div className=\"mb-4 p-3 bg-pink-50 border border-pink-200 rounded-lg animate-fadeDown\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-pink-600 animate-bounce\">🎉</span>\n            <span className=\"text-sm font-medium text-pink-800\">Great job! Keep going!</span>\n          </div>\n        </div>\n      )}\n\n      {/* Earned Badges */}\n      {earnedBadges.length > 0 && (\n        <div className=\"mb-4\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Earned Badges</h4>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {earnedBadges.map((badge, index) => (\n              <div\n                key={badge.id}\n                className={`\n                  p-3 rounded-lg border-2 border-pink-200 bg-pink-50 transition-all duration-300\n                  ${showCelebration && index === earnedBadges.length - 1 ? 'animate-pulse' : ''}\n                `}\n              >\n                <div className=\"text-center\">\n                  <div className=\"text-2xl mb-1\">{badge.icon}</div>\n                  <div className=\"text-xs font-medium text-pink-800\">{badge.name}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Next Badge */}\n      {nextBadge && completionPercentage < 100 && (\n        <div className=\"mb-4\">\n          <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Next Reward</h4>\n          <div className=\"p-3 rounded-lg bg-gray-50 border border-gray-200\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-2xl opacity-50\">{nextBadge.icon}</div>\n              <div className=\"flex-1\">\n                <div className=\"text-sm font-medium text-gray-900\">{nextBadge.name}</div>\n                <div className=\"text-xs text-gray-500\">{nextBadge.description}</div>\n                <div className=\"text-xs text-pink-600 mt-1\">\n                  {nextBadge.threshold - completionPercentage}% to go\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Quick Actions */}\n      <div className=\"space-y-2\">\n        {completionPercentage < 100 && (\n          <button className=\"w-full px-4 py-2 bg-pink-500 text-white rounded-lg font-medium hover:bg-pink-600 transition-colors duration-200 text-sm\">\n            Continue Profile Setup\n          </button>\n        )}\n        \n        {completionPercentage >= 50 && (\n          <button className=\"w-full px-4 py-2 bg-gray-100 text-gray-700 rounded-lg font-medium hover:bg-gray-200 transition-colors duration-200 text-sm\">\n            Find Grant Matches\n          </button>\n        )}\n      </div>\n\n      {/* Tips */}\n      <div className=\"mt-4 p-3 bg-gray-50 rounded-lg\">\n        <div className=\"text-xs text-gray-600\">\n          <span className=\"font-medium\">💡 Tip:</span> \n          {completionPercentage < 50 \n            ? ' Complete more sections to unlock better grant matches.'\n            : completionPercentage < 100\n            ? ' Finish your profile for the most accurate recommendations.'\n            : ' Your complete profile helps us find the best grants for you!'\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileRewards;","import React, { useState, useEffect } from 'react';\n\nconst WelcomeAnimation = ({ userName = 'User', orgName = 'Your Organization', isFirstVisit = false }) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [showContent, setShowContent] = useState(false);\n\n  useEffect(() => {\n    // Trigger animation on mount\n    setTimeout(() => setIsVisible(true), 100);\n    setTimeout(() => setShowContent(true), 500);\n  }, []);\n\n  const getCurrentGreeting = () => {\n    const hour = new Date().getHours();\n    if (hour < 12) return 'Good morning';\n    if (hour < 17) return 'Good afternoon';\n    return 'Good evening';\n  };\n\n  return (\n    <div className={`\n      transition-all duration-700 ease-out\n      ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-4'}\n    `}>\n      <div className=\"bg-gradient-to-r from-pink-50 to-white rounded-2xl p-6 mb-6 border border-pink-100 shadow-sm\">\n        <div className=\"flex items-center space-x-4\">\n          {/* Animated Icon */}\n          <div className=\"flex-shrink-0\">\n            <div className=\"w-12 h-12 bg-gradient-to-br from-pink-400 to-pink-600 rounded-xl flex items-center justify-center animate-float\">\n              <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n              </svg>\n            </div>\n          </div>\n          \n          {/* Welcome Content */}\n          <div className=\"flex-1 min-w-0\">\n            <div className={`\n              transition-all duration-500 delay-200\n              ${showContent ? 'opacity-100 translate-x-0' : 'opacity-0 translate-x-4'}\n            `}>\n              <h2 className=\"text-lg font-semibold text-gray-900\">\n                {getCurrentGreeting()}, {userName}!\n              </h2>\n              <p className=\"text-sm text-gray-600 truncate\">\n                Welcome back to <span className=\"font-medium text-pink-600\">{orgName}</span>\n              </p>\n            </div>\n            \n            {isFirstVisit && (\n              <div className={`\n                mt-2 transition-all duration-500 delay-400\n                ${showContent ? 'opacity-100 translate-x-0' : 'opacity-0 translate-x-4'}\n              `}>\n                <div className=\"inline-flex items-center px-3 py-1 rounded-full bg-pink-100 text-pink-700 text-xs font-medium\">\n                  <span className=\"w-2 h-2 bg-pink-400 rounded-full mr-2 animate-pulse\"></span>\n                  New here? Let's get you started!\n                </div>\n              </div>\n            )}\n          </div>\n          \n          {/* Quick Actions */}\n          <div className={`\n            hidden sm:flex items-center space-x-2 transition-all duration-500 delay-500\n            ${showContent ? 'opacity-100 scale-100' : 'opacity-0 scale-95'}\n          `}>\n            <button className=\"p-2 text-gray-400 hover:text-pink-500 transition-colors duration-200 rounded-lg hover:bg-pink-50\">\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-5 5v-5z\" />\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\" />\n              </svg>\n            </button>\n            <button className=\"p-2 text-gray-400 hover:text-pink-500 transition-colors duration-200 rounded-lg hover:bg-pink-50\">\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n        \n        {/* Quick Stats Preview */}\n        <div className={`\n          mt-4 pt-4 border-t border-pink-100 transition-all duration-500 delay-600\n          ${showContent ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-2'}\n        `}>\n          <div className=\"grid grid-cols-3 gap-4 text-center\">\n            <div>\n              <div className=\"text-lg font-semibold text-gray-900\">12</div>\n              <div className=\"text-xs text-gray-500\">Active Grants</div>\n            </div>\n            <div>\n              <div className=\"text-lg font-semibold text-gray-900\">85%</div>\n              <div className=\"text-xs text-gray-500\">Profile Done</div>\n            </div>\n            <div>\n              <div className=\"text-lg font-semibold text-gray-900\">3</div>\n              <div className=\"text-xs text-gray-500\">New Matches</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WelcomeAnimation;","import React, { useState } from 'react';\n\nconst ErrorVisualization = ({ \n  error, \n  type = 'validation', \n  field = '', \n  solution = '',\n  onRetry = null \n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  // Error type configurations\n  const errorTypes = {\n    validation: {\n      icon: '⚠️',\n      color: 'yellow',\n      title: 'Input Needs Fixing'\n    },\n    network: {\n      icon: '📡',\n      color: 'blue',\n      title: 'Connection Problem'\n    },\n    permission: {\n      icon: '🔒',\n      color: 'red',\n      title: 'Access Denied'\n    },\n    server: {\n      icon: '🔧',\n      color: 'orange',\n      title: 'System Issue'\n    },\n    format: {\n      icon: '📝',\n      color: 'purple',\n      title: 'Format Problem'\n    }\n  };\n\n  const config = errorTypes[type] || errorTypes.validation;\n\n  // Generate simple explanation based on error type\n  const getSimpleExplanation = () => {\n    switch (type) {\n      case 'validation':\n        return `The ${field || 'information'} you entered doesn't match what we need.`;\n      case 'network':\n        return 'We cannot connect to our servers right now.';\n      case 'permission':\n        return 'You do not have permission to do this action.';\n      case 'server':\n        return 'Our system is having trouble. This is not your fault.';\n      case 'format':\n        return `The ${field || 'format'} is not correct.`;\n      default:\n        return 'Something went wrong.';\n    }\n  };\n\n  // Get visual diagram based on error type\n  const getVisualDiagram = () => {\n    switch (type) {\n      case 'validation':\n        return (\n          <div className=\"flex items-center space-x-2 p-3 bg-yellow-50 rounded-lg border border-yellow-200\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-yellow-100 rounded-full flex items-center justify-center\">\n                <svg className=\"w-4 h-4 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.96-.833-2.732 0L3.732 19c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"text-sm font-medium text-yellow-800\">Check Your Input</div>\n              <div className=\"text-xs text-yellow-700 mt-1\">\n                {field && `Look at the \"${field}\" field again`}\n              </div>\n            </div>\n          </div>\n        );\n      \n      case 'network':\n        return (\n          <div className=\"flex items-center space-x-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-blue-600\">💻</span>\n              </div>\n              <div className=\"text-blue-600\">→</div>\n              <div className=\"w-8 h-8 bg-red-100 rounded-full flex items-center justify-center animate-pulse\">\n                <span className=\"text-red-600\">❌</span>\n              </div>\n              <div className=\"text-blue-600\">→</div>\n              <div className=\"w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-gray-600\">🏢</span>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'format':\n        return (\n          <div className=\"p-3 bg-purple-50 rounded-lg border border-purple-200\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-xs text-purple-700 font-medium mb-2\">What You Entered</div>\n                <div className=\"p-2 bg-red-100 rounded border border-red-200 text-red-700 text-sm\">\n                  ❌ Wrong format\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-xs text-purple-700 font-medium mb-2\">What We Need</div>\n                <div className=\"p-2 bg-green-100 rounded border border-green-200 text-green-700 text-sm\">\n                  ✅ Right format\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return (\n          <div className=\"p-3 bg-gray-50 rounded-lg border border-gray-200\">\n            <div className=\"text-center text-gray-600\">\n              <div className=\"text-2xl mb-2\">{config.icon}</div>\n              <div className=\"text-sm\">{config.title}</div>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"bg-white border-l-4 border-pink-400 rounded-lg shadow-sm p-4 animate-fadeDown\">\n      {/* Header */}\n      <div className=\"flex items-start space-x-3\">\n        <div className=\"flex-shrink-0\">\n          <div className=\"w-10 h-10 bg-pink-100 rounded-full flex items-center justify-center\">\n            <span className=\"text-lg\">{config.icon}</span>\n          </div>\n        </div>\n        \n        <div className=\"flex-1 min-w-0\">\n          <h3 className=\"text-lg font-medium text-gray-900\">{config.title}</h3>\n          <p className=\"text-sm text-gray-600 mt-1\">{getSimpleExplanation()}</p>\n          \n          {/* Original error message (if expanded) */}\n          {isExpanded && error && (\n            <div className=\"mt-3 p-3 bg-gray-50 rounded-lg\">\n              <div className=\"text-xs text-gray-500 font-medium mb-1\">Technical Details:</div>\n              <div className=\"text-xs text-gray-700 font-mono\">{error}</div>\n            </div>\n          )}\n        </div>\n\n        {/* Expand button */}\n        <button\n          onClick={() => setIsExpanded(!isExpanded)}\n          className=\"flex-shrink-0 text-gray-400 hover:text-gray-600 transition-colors duration-200\"\n        >\n          <svg \n            className={`w-5 h-5 transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </button>\n      </div>\n\n      {/* Visual Diagram */}\n      <div className=\"mt-4\">\n        {getVisualDiagram()}\n      </div>\n\n      {/* Solution */}\n      {solution && (\n        <div className=\"mt-4 p-3 bg-green-50 rounded-lg border border-green-200\">\n          <div className=\"flex items-start space-x-2\">\n            <svg className=\"w-5 h-5 text-green-600 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <div>\n              <div className=\"text-sm font-medium text-green-800\">How to Fix This</div>\n              <div className=\"text-sm text-green-700 mt-1\">{solution}</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"mt-4 flex flex-wrap gap-2\">\n        {onRetry && (\n          <button\n            onClick={onRetry}\n            className=\"px-4 py-2 bg-pink-500 text-white rounded-lg font-medium hover:bg-pink-600 transition-colors duration-200 text-sm\"\n          >\n            Try Again\n          </button>\n        )}\n        \n        {type === 'validation' && (\n          <button\n            onClick={() => setIsExpanded(!isExpanded)}\n            className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg font-medium hover:bg-gray-200 transition-colors duration-200 text-sm\"\n          >\n            Need Help?\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// Helper component for common error scenarios\nexport const FormValidationError = ({ field, value, expected, onFix }) => (\n  <ErrorVisualization\n    type=\"validation\"\n    field={field}\n    error={`Invalid ${field}: ${value}`}\n    solution={`Enter ${expected}. Look for the format example above the field.`}\n    onRetry={onFix}\n  />\n);\n\nexport const NetworkError = ({ onRetry }) => (\n  <ErrorVisualization\n    type=\"network\"\n    error=\"Network connection failed\"\n    solution=\"Check your internet connection and try again. If this keeps happening, wait a few minutes.\"\n    onRetry={onRetry}\n  />\n);\n\nexport const ServerError = ({ onRetry }) => (\n  <ErrorVisualization\n    type=\"server\"\n    error=\"Internal server error\"\n    solution=\"Our team has been notified. Please try again in a few minutes.\"\n    onRetry={onRetry}\n  />\n);\n\nexport default ErrorVisualization;"],"names":["useGrants","filters","arguments","length","undefined","grants","setGrants","useState","loading","setLoading","error","setError","dashboardData","setDashboardData","fetchGrants","useCallback","async","data","getGrants","err","console","fetchDashboardData","getDashboardData","useEffect","includeDashboard","refreshData","formatDate","dateString","Date","toLocaleDateString","year","month","day","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","ChartJS","register","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","Dashboard","_dashboardData$status","upcomingGrants","setUpcomingGrants","topMatchingGrants","setTopMatchingGrants","today","thirtyDaysFromNow","setDate","getDate","upcoming","filter","grant","due_date","dueDate","sort","a","b","slice","matching","match_score","_jsx","className","children","ErrorVisualization","type","solution","onRetry","window","location","reload","getStatusBadgeClass","status","_jsxs","WelcomeAnimation","userName","orgName","isFirstVisit","Link","to","viewBox","fill","stroke","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","total_grants","total_funding","high_match_count","status_counts","Submitted","Object","keys","ProfileRewards","completionPercentage","completedSections","totalSections","map","concat","id","title","funder","_Fragment","score","_ref","showCelebration","setShowCelebration","previousCompletion","setPreviousCompletion","badges","name","description","icon","threshold","color","setTimeout","earnedBadges","badge","nextBadge","find","cx","cy","r","strokeDasharray","Math","PI","strokeDashoffset","x1","y1","x2","y2","offset","stopColor","index","isVisible","setIsVisible","showContent","setShowContent","getCurrentGreeting","hour","getHours","field","isExpanded","setIsExpanded","errorTypes","validation","network","permission","server","config","getSimpleExplanation","onClick","getVisualDiagram"],"sourceRoot":""}